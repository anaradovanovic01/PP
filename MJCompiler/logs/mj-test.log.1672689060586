INFO  20:48:52,475 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:48:52,532 - #2 program
INFO  20:48:52,532 - #48 p
INFO  20:48:52,532 - #9 const
INFO  20:48:52,533 - #48 int
INFO  20:48:52,533 - #48 size
INFO  20:48:52,533 - #35 =
INFO  20:48:52,533 - #45 10
INFO  20:48:52,533 - #18 ;
INFO  20:48:52,533 - #7 class
INFO  20:48:52,534 - #48 Table
INFO  20:48:52,534 - #24 {
INFO  20:48:52,534 - #48 int
INFO  20:48:52,535 - #48 pos
INFO  20:48:52,535 - #26 [
INFO  20:48:52,535 - #27 ]
INFO  20:48:52,536 - #20 ,
INFO  20:48:52,536 - #48 neg
INFO  20:48:52,536 - #26 [
INFO  20:48:52,536 - #27 ]
INFO  20:48:52,536 - #20 ,
INFO  20:48:52,536 - #48 factor
INFO  20:48:52,536 - #18 ;
INFO  20:48:52,536 - #24 {
INFO  20:48:52,536 - #48 Table
INFO  20:48:52,538 - #22 (
INFO  20:48:52,538 - #48 int
INFO  20:48:52,538 - #48 factor
INFO  20:48:52,538 - #23 )
INFO  20:48:52,538 - #24 {
INFO  20:48:52,538 - #48 factor
INFO  20:48:52,538 - #35 =
INFO  20:48:52,538 - #48 factor
INFO  20:48:52,538 - #18 ;
INFO  20:48:52,539 - #25 }
INFO  20:48:52,540 - #5 void
INFO  20:48:52,540 - #48 putp
INFO  20:48:52,540 - #22 (
INFO  20:48:52,540 - #48 int
INFO  20:48:52,540 - #48 a
INFO  20:48:52,540 - #20 ,
INFO  20:48:52,540 - #48 int
INFO  20:48:52,540 - #48 idx
INFO  20:48:52,540 - #23 )
INFO  20:48:52,540 - #24 {
INFO  20:48:52,540 - #48 pos
INFO  20:48:52,540 - #26 [
INFO  20:48:52,540 - #48 idx
INFO  20:48:52,540 - #27 ]
INFO  20:48:52,540 - #35 =
INFO  20:48:52,540 - #48 a
INFO  20:48:52,540 - #18 ;
INFO  20:48:52,540 - #25 }
INFO  20:48:52,540 - #5 void
INFO  20:48:52,541 - #48 putn
INFO  20:48:52,541 - #22 (
INFO  20:48:52,541 - #48 int
INFO  20:48:52,541 - #48 a
INFO  20:48:52,541 - #20 ,
INFO  20:48:52,541 - #48 int
INFO  20:48:52,541 - #48 idx
INFO  20:48:52,542 - #23 )
INFO  20:48:52,542 - #24 {
INFO  20:48:52,542 - #48 neg
INFO  20:48:52,542 - #26 [
INFO  20:48:52,542 - #48 idx
INFO  20:48:52,542 - #27 ]
INFO  20:48:52,542 - #35 =
INFO  20:48:52,542 - #48 a
INFO  20:48:52,542 - #18 ;
INFO  20:48:52,542 - #25 }
INFO  20:48:52,542 - #48 int
INFO  20:48:52,542 - #48 getp
INFO  20:48:52,542 - #22 (
INFO  20:48:52,542 - #48 int
INFO  20:48:52,542 - #48 idx
INFO  20:48:52,542 - #23 )
INFO  20:48:52,542 - #24 {
INFO  20:48:52,542 - #4 return
INFO  20:48:52,542 - #48 pos
INFO  20:48:52,542 - #26 [
INFO  20:48:52,542 - #48 idx
INFO  20:48:52,542 - #27 ]
INFO  20:48:52,543 - #18 ;
INFO  20:48:52,543 - #25 }
INFO  20:48:52,544 - #48 int
INFO  20:48:52,544 - #48 getn
INFO  20:48:52,544 - #22 (
INFO  20:48:52,544 - #48 int
INFO  20:48:52,544 - #48 idx
INFO  20:48:52,544 - #23 )
INFO  20:48:52,544 - #24 {
INFO  20:48:52,544 - #4 return
INFO  20:48:52,544 - #48 neg
INFO  20:48:52,544 - #26 [
INFO  20:48:52,544 - #48 idx
INFO  20:48:52,544 - #27 ]
INFO  20:48:52,545 - #18 ;
INFO  20:48:52,545 - #25 }
INFO  20:48:52,545 - #25 }
INFO  20:48:52,545 - #25 }
INFO  20:48:52,545 - #48 Table
INFO  20:48:52,545 - #48 val
INFO  20:48:52,545 - #18 ;
INFO  20:48:52,545 - #48 Int
INFO  20:48:52,545 - #48 rows
INFO  20:48:52,545 - #20 ,
INFO  20:48:52,545 - #48 columns
INFO  20:48:52,545 - #18 ;
INFO  20:48:52,545 - #24 {
INFO  20:48:52,546 - #5 void
INFO  20:48:52,546 - #48 f
INFO  20:48:52,546 - #22 (
INFO  20:48:52,546 - #48 char
INFO  20:48:52,546 - #48 ch
INFO  20:48:52,546 - #20 ,
INFO  20:48:52,546 - #48 int
INFO  20:48:52,546 - #48 a
INFO  20:48:52,546 - #20 ,
INFO  20:48:52,546 - #48 int
INFO  20:48:52,546 - #48 arg
INFO  20:48:52,546 - #23 )
INFO  20:48:52,546 - #48 int
INFO  20:48:52,546 - #48 x
INFO  20:48:52,547 - #18 ;
INFO  20:48:52,547 - #24 {
INFO  20:48:52,547 - #48 x
INFO  20:48:52,547 - #35 =
INFO  20:48:52,547 - #48 arg
INFO  20:48:52,547 - #18 ;
INFO  20:48:52,547 - #25 }
INFO  20:48:52,547 - #5 void
INFO  20:48:52,547 - #48 main
INFO  20:48:52,547 - #22 (
INFO  20:48:52,547 - #23 )
INFO  20:48:52,548 - #48 int
INFO  20:48:52,548 - #48 x
INFO  20:48:52,549 - #20 ,
INFO  20:48:52,549 - #48 i
INFO  20:48:52,549 - #18 ;
INFO  20:48:52,549 - #48 char
INFO  20:48:52,550 - #48 c
INFO  20:48:52,550 - #18 ;
INFO  20:48:52,550 - #48 int
INFO  20:48:52,550 - #48 arr
INFO  20:48:52,550 - #26 [
INFO  20:48:52,550 - #27 ]
INFO  20:48:52,550 - #18 ;
INFO  20:48:52,550 - #24 {
INFO  20:48:52,550 - #48 val
INFO  20:48:52,550 - #35 =
INFO  20:48:52,550 - #12 new
INFO  20:48:52,550 - #48 Table
INFO  20:48:52,550 - #22 (
INFO  20:48:52,550 - #45 2
INFO  20:48:52,550 - #23 )
INFO  20:48:52,550 - #18 ;
INFO  20:48:52,550 - #48 arr
INFO  20:48:52,550 - #35 =
INFO  20:48:52,550 - #12 new
INFO  20:48:52,550 - #48 int
INFO  20:48:52,550 - #26 [
INFO  20:48:52,550 - #45 3
INFO  20:48:52,550 - #27 ]
INFO  20:48:52,550 - #18 ;
INFO  20:48:52,552 - #48 i
INFO  20:48:52,552 - #35 =
INFO  20:48:52,552 - #45 0
INFO  20:48:52,553 - #18 ;
INFO  20:48:52,553 - #11 while
INFO  20:48:52,553 - #22 (
INFO  20:48:52,553 - #48 i
INFO  20:48:52,553 - #32 <
INFO  20:48:52,553 - #45 3
INFO  20:48:52,553 - #23 )
INFO  20:48:52,554 - #24 {
INFO  20:48:52,554 - #48 arr
INFO  20:48:52,554 - #26 [
INFO  20:48:52,554 - #48 i
INFO  20:48:52,554 - #27 ]
INFO  20:48:52,554 - #35 =
INFO  20:48:52,554 - #48 i
INFO  20:48:52,554 - #18 ;
INFO  20:48:52,554 - #48 i
INFO  20:48:52,554 - #38 ++
INFO  20:48:52,554 - #18 ;
INFO  20:48:52,554 - #25 }
INFO  20:48:52,554 - #48 arr
INFO  20:48:52,554 - #21 .
INFO  20:48:52,554 - #17 foreach
INFO  20:48:52,554 - #22 (
INFO  20:48:52,554 - #48 x
INFO  20:48:52,554 - #34 =>
INFO  20:48:52,554 - #3 print
INFO  20:48:52,554 - #22 (
INFO  20:48:52,555 - #48 x
INFO  20:48:52,555 - #23 )
INFO  20:48:52,555 - #18 ;
INFO  20:48:52,555 - #23 )
INFO  20:48:52,555 - #18 ;
INFO  20:48:52,555 - #48 val
INFO  20:48:52,555 - #21 .
INFO  20:48:52,555 - #48 pos
INFO  20:48:52,555 - #35 =
INFO  20:48:52,555 - #12 new
INFO  20:48:52,555 - #48 int
INFO  20:48:52,555 - #26 [
INFO  20:48:52,555 - #48 size
INFO  20:48:52,555 - #27 ]
INFO  20:48:52,555 - #18 ;
INFO  20:48:52,555 - #48 val
INFO  20:48:52,555 - #21 .
INFO  20:48:52,555 - #48 neg
INFO  20:48:52,555 - #35 =
INFO  20:48:52,555 - #12 new
INFO  20:48:52,555 - #48 int
INFO  20:48:52,555 - #26 [
INFO  20:48:52,555 - #48 size
INFO  20:48:52,555 - #27 ]
INFO  20:48:52,555 - #18 ;
INFO  20:48:52,555 - #13 read
INFO  20:48:52,555 - #22 (
INFO  20:48:52,555 - #48 x
INFO  20:48:52,555 - #23 )
INFO  20:48:52,555 - #18 ;
INFO  20:48:52,555 - #26 [
INFO  20:48:52,555 - #48 i
INFO  20:48:52,556 - #20 ,
INFO  20:48:52,556 - #48 x
INFO  20:48:52,556 - #27 ]
INFO  20:48:52,556 - #35 =
INFO  20:48:52,556 - #48 arr
INFO  20:48:52,556 - #18 ;
INFO  20:48:52,556 - #11 while
INFO  20:48:52,556 - #22 (
INFO  20:48:52,556 - #48 i
INFO  20:48:52,556 - #32 <
INFO  20:48:52,556 - #48 size
INFO  20:48:52,556 - #23 )
INFO  20:48:52,556 - #24 {
INFO  20:48:52,556 - #48 val
INFO  20:48:52,556 - #21 .
INFO  20:48:52,556 - #48 putp
INFO  20:48:52,556 - #22 (
INFO  20:48:52,556 - #45 0
INFO  20:48:52,556 - #20 ,
INFO  20:48:52,556 - #48 i
INFO  20:48:52,556 - #23 )
INFO  20:48:52,558 - #18 ;
INFO  20:48:52,558 - #48 val
INFO  20:48:52,558 - #21 .
INFO  20:48:52,558 - #48 putn
INFO  20:48:52,558 - #22 (
INFO  20:48:52,558 - #45 0
INFO  20:48:52,558 - #20 ,
INFO  20:48:52,558 - #48 i
INFO  20:48:52,558 - #23 )
INFO  20:48:52,558 - #18 ;
INFO  20:48:52,558 - #48 i
INFO  20:48:52,558 - #38 ++
INFO  20:48:52,558 - #18 ;
INFO  20:48:52,558 - #25 }
INFO  20:48:52,558 - #48 f
INFO  20:48:52,558 - #22 (
INFO  20:48:52,558 - #48 c
INFO  20:48:52,558 - #20 ,
INFO  20:48:52,558 - #48 x
INFO  20:48:52,558 - #20 ,
INFO  20:48:52,558 - #48 i
INFO  20:48:52,558 - #23 )
INFO  20:48:52,558 - #18 ;
INFO  20:48:52,558 - #13 read
INFO  20:48:52,558 - #22 (
INFO  20:48:52,558 - #48 rows
INFO  20:48:52,558 - #23 )
INFO  20:48:52,558 - #18 ;
INFO  20:48:52,558 - #48 x
INFO  20:48:52,558 - #35 =
INFO  20:48:52,558 - #48 rows
INFO  20:48:52,558 - #18 ;
INFO  20:48:52,558 - #11 while
INFO  20:48:52,558 - #22 (
INFO  20:48:52,558 - #46 true
INFO  20:48:52,558 - #23 )
