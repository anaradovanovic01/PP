INFO  20:34:08,906 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:34:08,960 - #2 program
INFO  20:34:08,960 - #48 p
INFO  20:34:08,960 - #9 const
INFO  20:34:08,961 - #48 int
INFO  20:34:08,961 - #48 size
INFO  20:34:08,962 - #35 =
INFO  20:34:08,962 - #45 10
INFO  20:34:08,962 - #18 ;
INFO  20:34:08,962 - #7 class
INFO  20:34:08,963 - #48 Table
INFO  20:34:08,963 - #24 {
INFO  20:34:08,963 - #48 int
INFO  20:34:08,964 - #48 pos
INFO  20:34:08,964 - #26 [
INFO  20:34:08,964 - #27 ]
INFO  20:34:08,964 - #20 ,
INFO  20:34:08,964 - #48 neg
INFO  20:34:08,964 - #26 [
INFO  20:34:08,964 - #27 ]
INFO  20:34:08,964 - #20 ,
INFO  20:34:08,965 - #48 factor
INFO  20:34:08,965 - #18 ;
INFO  20:34:08,965 - #24 {
INFO  20:34:08,966 - #48 Table
INFO  20:34:08,966 - #22 (
INFO  20:34:08,966 - #48 int
INFO  20:34:08,966 - #48 factor
INFO  20:34:08,966 - #23 )
INFO  20:34:08,967 - #24 {
INFO  20:34:08,967 - #48 factor
INFO  20:34:08,967 - #35 =
INFO  20:34:08,968 - #48 factor
INFO  20:34:08,968 - #18 ;
INFO  20:34:08,969 - #25 }
INFO  20:34:08,969 - #5 void
INFO  20:34:08,969 - #48 putp
INFO  20:34:08,969 - #22 (
INFO  20:34:08,970 - #48 int
INFO  20:34:08,970 - #48 a
INFO  20:34:08,970 - #20 ,
INFO  20:34:08,970 - #48 int
INFO  20:34:08,970 - #48 idx
INFO  20:34:08,970 - #23 )
INFO  20:34:08,970 - #24 {
INFO  20:34:08,970 - #48 pos
INFO  20:34:08,970 - #26 [
INFO  20:34:08,970 - #48 idx
INFO  20:34:08,970 - #27 ]
INFO  20:34:08,970 - #35 =
INFO  20:34:08,970 - #48 a
INFO  20:34:08,971 - #18 ;
INFO  20:34:08,971 - #25 }
INFO  20:34:08,971 - #5 void
INFO  20:34:08,971 - #48 putn
INFO  20:34:08,971 - #22 (
INFO  20:34:08,971 - #48 int
INFO  20:34:08,971 - #48 a
INFO  20:34:08,971 - #20 ,
INFO  20:34:08,972 - #48 int
INFO  20:34:08,972 - #48 idx
INFO  20:34:08,972 - #23 )
INFO  20:34:08,972 - #24 {
INFO  20:34:08,972 - #48 neg
INFO  20:34:08,972 - #26 [
INFO  20:34:08,972 - #48 idx
INFO  20:34:08,972 - #27 ]
INFO  20:34:08,972 - #35 =
INFO  20:34:08,972 - #48 a
INFO  20:34:08,972 - #18 ;
INFO  20:34:08,973 - #25 }
INFO  20:34:08,973 - #48 int
INFO  20:34:08,973 - #48 getp
INFO  20:34:08,973 - #22 (
INFO  20:34:08,973 - #48 int
INFO  20:34:08,973 - #48 idx
INFO  20:34:08,973 - #23 )
INFO  20:34:08,973 - #24 {
INFO  20:34:08,973 - #4 return
INFO  20:34:08,973 - #48 pos
INFO  20:34:08,973 - #26 [
INFO  20:34:08,973 - #48 idx
INFO  20:34:08,973 - #27 ]
INFO  20:34:08,973 - #18 ;
INFO  20:34:08,973 - #25 }
INFO  20:34:08,974 - #48 int
INFO  20:34:08,974 - #48 getn
INFO  20:34:08,974 - #22 (
INFO  20:34:08,974 - #48 int
INFO  20:34:08,974 - #48 idx
INFO  20:34:08,974 - #23 )
INFO  20:34:08,974 - #24 {
INFO  20:34:08,974 - #4 return
INFO  20:34:08,974 - #48 neg
INFO  20:34:08,974 - #26 [
INFO  20:34:08,974 - #48 idx
INFO  20:34:08,974 - #27 ]
INFO  20:34:08,974 - #18 ;
INFO  20:34:08,974 - #25 }
INFO  20:34:08,974 - #25 }
INFO  20:34:08,974 - #25 }
INFO  20:34:08,976 - #48 Table
INFO  20:34:08,976 - #48 val
INFO  20:34:08,976 - #18 ;
INFO  20:34:08,976 - #48 Int
INFO  20:34:08,976 - #48 rows
INFO  20:34:08,976 - #20 ,
INFO  20:34:08,977 - #48 columns
INFO  20:34:08,977 - #18 ;
INFO  20:34:08,977 - #24 {
INFO  20:34:08,977 - #5 void
INFO  20:34:08,977 - #48 f
INFO  20:34:08,977 - #22 (
INFO  20:34:08,977 - #48 char
INFO  20:34:08,977 - #48 ch
INFO  20:34:08,977 - #20 ,
INFO  20:34:08,977 - #48 int
INFO  20:34:08,977 - #48 a
INFO  20:34:08,977 - #20 ,
INFO  20:34:08,977 - #48 int
INFO  20:34:08,977 - #48 arg
INFO  20:34:08,977 - #23 )
INFO  20:34:08,977 - #48 int
INFO  20:34:08,977 - #48 x
INFO  20:34:08,977 - #18 ;
INFO  20:34:08,977 - #24 {
INFO  20:34:08,977 - #48 x
INFO  20:34:08,978 - #35 =
INFO  20:34:08,978 - #48 arg
INFO  20:34:08,978 - #18 ;
INFO  20:34:08,978 - #25 }
INFO  20:34:08,978 - #5 void
INFO  20:34:08,978 - #48 main
INFO  20:34:08,978 - #22 (
INFO  20:34:08,978 - #23 )
INFO  20:34:08,978 - #48 int
INFO  20:34:08,978 - #48 x
INFO  20:34:08,979 - #20 ,
INFO  20:34:08,979 - #48 i
INFO  20:34:08,979 - #18 ;
INFO  20:34:08,979 - #48 char
INFO  20:34:08,979 - #48 c
INFO  20:34:08,979 - #18 ;
INFO  20:34:08,979 - #48 int
INFO  20:34:08,979 - #48 arr
INFO  20:34:08,979 - #26 [
INFO  20:34:08,979 - #27 ]
INFO  20:34:08,979 - #18 ;
INFO  20:34:08,979 - #24 {
INFO  20:34:08,979 - #48 val
INFO  20:34:08,979 - #35 =
INFO  20:34:08,979 - #12 new
INFO  20:34:08,979 - #48 Table
INFO  20:34:08,979 - #22 (
INFO  20:34:08,979 - #45 2
INFO  20:34:08,979 - #23 )
INFO  20:34:08,980 - #18 ;
INFO  20:34:08,980 - #48 arr
INFO  20:34:08,980 - #35 =
INFO  20:34:08,980 - #12 new
INFO  20:34:08,980 - #48 int
INFO  20:34:08,980 - #26 [
INFO  20:34:08,980 - #45 3
INFO  20:34:08,980 - #27 ]
INFO  20:34:08,980 - #18 ;
INFO  20:34:08,980 - #48 i
INFO  20:34:08,980 - #35 =
INFO  20:34:08,980 - #45 0
INFO  20:34:08,980 - #18 ;
INFO  20:34:08,980 - #11 while
INFO  20:34:08,980 - #22 (
INFO  20:34:08,980 - #48 i
INFO  20:34:08,980 - #32 <
INFO  20:34:08,981 - #45 3
INFO  20:34:08,981 - #23 )
INFO  20:34:08,981 - #24 {
INFO  20:34:08,981 - #48 arr
INFO  20:34:08,982 - #26 [
INFO  20:34:08,982 - #48 i
INFO  20:34:08,982 - #27 ]
INFO  20:34:08,982 - #35 =
INFO  20:34:08,982 - #48 i
INFO  20:34:08,982 - #18 ;
INFO  20:34:08,982 - #48 i
INFO  20:34:08,982 - #38 ++
INFO  20:34:08,982 - #18 ;
INFO  20:34:08,982 - #25 }
INFO  20:34:08,982 - #48 arr
INFO  20:34:08,982 - #21 .
INFO  20:34:08,982 - #17 foreach
INFO  20:34:08,982 - #22 (
INFO  20:34:08,982 - #48 x
INFO  20:34:08,983 - #34 =>
INFO  20:34:08,983 - #3 print
INFO  20:34:08,983 - #22 (
INFO  20:34:08,983 - #48 x
INFO  20:34:08,983 - #23 )
INFO  20:34:08,983 - #18 ;
INFO  20:34:08,983 - #23 )
INFO  20:34:08,983 - #18 ;
INFO  20:34:08,983 - #48 val
INFO  20:34:08,983 - #21 .
INFO  20:34:08,983 - #48 pos
INFO  20:34:08,983 - #35 =
INFO  20:34:08,983 - #12 new
INFO  20:34:08,983 - #48 int
INFO  20:34:08,984 - #26 [
INFO  20:34:08,984 - #48 size
INFO  20:34:08,984 - #27 ]
INFO  20:34:08,984 - #18 ;
INFO  20:34:08,984 - #48 val
INFO  20:34:08,984 - #21 .
INFO  20:34:08,984 - #48 neg
INFO  20:34:08,984 - #35 =
INFO  20:34:08,984 - #12 new
INFO  20:34:08,984 - #48 int
INFO  20:34:08,984 - #26 [
INFO  20:34:08,984 - #48 size
INFO  20:34:08,984 - #27 ]
INFO  20:34:08,984 - #18 ;
INFO  20:34:08,984 - #13 read
INFO  20:34:08,984 - #22 (
INFO  20:34:08,984 - #48 x
INFO  20:34:08,984 - #23 )
INFO  20:34:08,985 - #18 ;
INFO  20:34:08,985 - #26 [
INFO  20:34:08,986 - #48 i
INFO  20:34:08,986 - #20 ,
INFO  20:34:08,986 - #48 x
INFO  20:34:08,986 - #27 ]
INFO  20:34:08,986 - #35 =
INFO  20:34:08,986 - #48 arr
INFO  20:34:08,986 - #18 ;
INFO  20:34:08,986 - #11 while
INFO  20:34:08,986 - #22 (
INFO  20:34:08,986 - #48 i
INFO  20:34:08,986 - #32 <
INFO  20:34:08,986 - #48 size
INFO  20:34:08,986 - #23 )
INFO  20:34:08,986 - #24 {
INFO  20:34:08,986 - #48 val
INFO  20:34:08,986 - #21 .
INFO  20:34:08,987 - #48 putp
INFO  20:34:08,987 - #22 (
INFO  20:34:08,987 - #45 0
INFO  20:34:08,987 - #20 ,
INFO  20:34:08,987 - #48 i
INFO  20:34:08,987 - #23 )
INFO  20:34:08,987 - #18 ;
INFO  20:34:08,987 - #48 val
INFO  20:34:08,987 - #21 .
INFO  20:34:08,987 - #48 putn
INFO  20:34:08,987 - #22 (
INFO  20:34:08,987 - #45 0
INFO  20:34:08,987 - #20 ,
INFO  20:34:08,987 - #48 i
INFO  20:34:08,987 - #23 )
INFO  20:34:08,988 - #18 ;
INFO  20:34:08,988 - #48 i
INFO  20:34:08,988 - #38 ++
INFO  20:34:08,988 - #18 ;
INFO  20:34:08,988 - #25 }
INFO  20:34:08,988 - #48 f
INFO  20:34:08,988 - #22 (
INFO  20:34:08,988 - #48 c
INFO  20:34:08,988 - #20 ,
INFO  20:34:08,988 - #48 x
INFO  20:34:08,988 - #20 ,
INFO  20:34:08,988 - #48 i
INFO  20:34:08,988 - #23 )
INFO  20:34:08,988 - #18 ;
INFO  20:34:08,988 - #13 read
INFO  20:34:08,988 - #22 (
INFO  20:34:08,988 - #48 rows
INFO  20:34:08,988 - #23 )
INFO  20:34:08,988 - #18 ;
INFO  20:34:08,988 - #48 x
INFO  20:34:08,988 - #35 =
INFO  20:34:08,988 - #48 rows
INFO  20:34:08,989 - #18 ;
INFO  20:34:08,989 - #11 while
INFO  20:34:08,989 - #22 (
INFO  20:34:08,989 - #46 true
INFO  20:34:08,989 - #23 )
