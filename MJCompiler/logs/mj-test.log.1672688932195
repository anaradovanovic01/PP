INFO  20:42:59,220 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:42:59,254 - #2 program
INFO  20:42:59,254 - #48 p
INFO  20:42:59,254 - #9 const
INFO  20:42:59,256 - #48 int
INFO  20:42:59,256 - #48 size
INFO  20:42:59,256 - #35 =
INFO  20:42:59,256 - #45 10
INFO  20:42:59,256 - #18 ;
INFO  20:42:59,256 - #7 class
INFO  20:42:59,256 - #48 Table
INFO  20:42:59,256 - #24 {
INFO  20:42:59,257 - #48 int
INFO  20:42:59,257 - #48 pos
INFO  20:42:59,257 - #26 [
INFO  20:42:59,257 - #27 ]
INFO  20:42:59,257 - #20 ,
INFO  20:42:59,258 - #48 neg
INFO  20:42:59,258 - #26 [
INFO  20:42:59,258 - #27 ]
INFO  20:42:59,258 - #20 ,
INFO  20:42:59,259 - #48 factor
INFO  20:42:59,259 - #18 ;
INFO  20:42:59,259 - #24 {
INFO  20:42:59,259 - #48 Table
INFO  20:42:59,260 - #22 (
INFO  20:42:59,260 - #48 int
INFO  20:42:59,260 - #48 factor
INFO  20:42:59,260 - #23 )
INFO  20:42:59,260 - #24 {
INFO  20:42:59,260 - #48 factor
INFO  20:42:59,261 - #35 =
INFO  20:42:59,261 - #48 factor
INFO  20:42:59,261 - #18 ;
INFO  20:42:59,262 - #25 }
INFO  20:42:59,262 - #5 void
INFO  20:42:59,262 - #48 putp
INFO  20:42:59,262 - #22 (
INFO  20:42:59,263 - #48 int
INFO  20:42:59,263 - #48 a
INFO  20:42:59,263 - #20 ,
INFO  20:42:59,263 - #48 int
INFO  20:42:59,263 - #48 idx
INFO  20:42:59,263 - #23 )
INFO  20:42:59,263 - #24 {
INFO  20:42:59,263 - #48 pos
INFO  20:42:59,263 - #26 [
INFO  20:42:59,263 - #48 idx
INFO  20:42:59,263 - #27 ]
INFO  20:42:59,263 - #35 =
INFO  20:42:59,263 - #48 a
INFO  20:42:59,263 - #18 ;
INFO  20:42:59,264 - #25 }
INFO  20:42:59,264 - #5 void
INFO  20:42:59,264 - #48 putn
INFO  20:42:59,264 - #22 (
INFO  20:42:59,264 - #48 int
INFO  20:42:59,264 - #48 a
INFO  20:42:59,264 - #20 ,
INFO  20:42:59,264 - #48 int
INFO  20:42:59,264 - #48 idx
INFO  20:42:59,264 - #23 )
INFO  20:42:59,265 - #24 {
INFO  20:42:59,265 - #48 neg
INFO  20:42:59,265 - #26 [
INFO  20:42:59,265 - #48 idx
INFO  20:42:59,265 - #27 ]
INFO  20:42:59,265 - #35 =
INFO  20:42:59,265 - #48 a
INFO  20:42:59,265 - #18 ;
INFO  20:42:59,265 - #25 }
INFO  20:42:59,265 - #48 int
INFO  20:42:59,265 - #48 getp
INFO  20:42:59,265 - #22 (
INFO  20:42:59,265 - #48 int
INFO  20:42:59,265 - #48 idx
INFO  20:42:59,266 - #23 )
INFO  20:42:59,266 - #24 {
INFO  20:42:59,266 - #4 return
INFO  20:42:59,266 - #48 pos
INFO  20:42:59,266 - #26 [
INFO  20:42:59,266 - #48 idx
INFO  20:42:59,266 - #27 ]
INFO  20:42:59,266 - #18 ;
INFO  20:42:59,267 - #25 }
INFO  20:42:59,267 - #48 int
INFO  20:42:59,267 - #48 getn
INFO  20:42:59,267 - #22 (
INFO  20:42:59,267 - #48 int
INFO  20:42:59,267 - #48 idx
INFO  20:42:59,267 - #23 )
INFO  20:42:59,267 - #24 {
INFO  20:42:59,268 - #4 return
INFO  20:42:59,268 - #48 neg
INFO  20:42:59,268 - #26 [
INFO  20:42:59,268 - #48 idx
INFO  20:42:59,268 - #27 ]
INFO  20:42:59,268 - #18 ;
INFO  20:42:59,268 - #25 }
INFO  20:42:59,268 - #25 }
INFO  20:42:59,268 - #25 }
INFO  20:42:59,268 - #48 Table
INFO  20:42:59,269 - #48 val
INFO  20:42:59,269 - #18 ;
INFO  20:42:59,269 - #48 Int
INFO  20:42:59,269 - #48 rows
INFO  20:42:59,269 - #20 ,
INFO  20:42:59,269 - #48 columns
INFO  20:42:59,269 - #18 ;
INFO  20:42:59,269 - #24 {
INFO  20:42:59,269 - #5 void
INFO  20:42:59,269 - #48 f
INFO  20:42:59,269 - #22 (
INFO  20:42:59,269 - #48 char
INFO  20:42:59,269 - #48 ch
INFO  20:42:59,270 - #20 ,
INFO  20:42:59,270 - #48 int
INFO  20:42:59,270 - #48 a
INFO  20:42:59,270 - #20 ,
INFO  20:42:59,270 - #48 int
INFO  20:42:59,270 - #48 arg
INFO  20:42:59,270 - #23 )
INFO  20:42:59,270 - #48 int
INFO  20:42:59,270 - #48 x
INFO  20:42:59,270 - #18 ;
INFO  20:42:59,270 - #24 {
INFO  20:42:59,270 - #48 x
INFO  20:42:59,270 - #35 =
INFO  20:42:59,270 - #48 arg
INFO  20:42:59,271 - #18 ;
INFO  20:42:59,271 - #25 }
INFO  20:42:59,271 - #5 void
INFO  20:42:59,271 - #48 main
INFO  20:42:59,271 - #22 (
INFO  20:42:59,271 - #23 )
INFO  20:42:59,271 - #48 int
INFO  20:42:59,271 - #48 x
INFO  20:42:59,271 - #20 ,
INFO  20:42:59,271 - #48 i
INFO  20:42:59,272 - #18 ;
INFO  20:42:59,272 - #48 char
INFO  20:42:59,272 - #48 c
INFO  20:42:59,272 - #18 ;
INFO  20:42:59,272 - #48 int
INFO  20:42:59,272 - #48 arr
INFO  20:42:59,272 - #26 [
INFO  20:42:59,272 - #27 ]
INFO  20:42:59,272 - #18 ;
INFO  20:42:59,272 - #24 {
INFO  20:42:59,272 - #48 val
INFO  20:42:59,272 - #35 =
INFO  20:42:59,272 - #12 new
INFO  20:42:59,272 - #48 Table
INFO  20:42:59,272 - #22 (
INFO  20:42:59,272 - #45 2
INFO  20:42:59,272 - #23 )
INFO  20:42:59,272 - #18 ;
INFO  20:42:59,272 - #48 arr
INFO  20:42:59,272 - #35 =
INFO  20:42:59,273 - #12 new
INFO  20:42:59,273 - #48 int
INFO  20:42:59,273 - #26 [
INFO  20:42:59,273 - #45 3
INFO  20:42:59,273 - #27 ]
INFO  20:42:59,273 - #18 ;
INFO  20:42:59,274 - #48 i
INFO  20:42:59,275 - #35 =
INFO  20:42:59,275 - #45 0
INFO  20:42:59,275 - #18 ;
INFO  20:42:59,275 - #11 while
INFO  20:42:59,275 - #22 (
INFO  20:42:59,275 - #48 i
INFO  20:42:59,275 - #32 <
INFO  20:42:59,275 - #45 3
INFO  20:42:59,276 - #23 )
INFO  20:42:59,276 - #24 {
INFO  20:42:59,277 - #48 arr
INFO  20:42:59,277 - #26 [
INFO  20:42:59,277 - #48 i
INFO  20:42:59,277 - #27 ]
INFO  20:42:59,277 - #35 =
INFO  20:42:59,277 - #48 i
INFO  20:42:59,277 - #18 ;
INFO  20:42:59,277 - #48 i
INFO  20:42:59,277 - #38 ++
INFO  20:42:59,278 - #18 ;
INFO  20:42:59,278 - #25 }
INFO  20:42:59,278 - #48 arr
INFO  20:42:59,278 - #21 .
INFO  20:42:59,278 - #17 foreach
INFO  20:42:59,278 - #22 (
INFO  20:42:59,279 - #48 x
INFO  20:42:59,279 - #34 =>
INFO  20:42:59,279 - #3 print
INFO  20:42:59,279 - #22 (
INFO  20:42:59,279 - #48 x
INFO  20:42:59,279 - #23 )
INFO  20:42:59,279 - #18 ;
INFO  20:42:59,279 - #23 )
INFO  20:42:59,280 - #18 ;
INFO  20:42:59,280 - #48 val
INFO  20:42:59,280 - #21 .
INFO  20:42:59,280 - #48 pos
INFO  20:42:59,280 - #35 =
INFO  20:42:59,280 - #12 new
INFO  20:42:59,280 - #48 int
INFO  20:42:59,280 - #26 [
INFO  20:42:59,280 - #48 size
INFO  20:42:59,280 - #27 ]
INFO  20:42:59,280 - #18 ;
INFO  20:42:59,280 - #48 val
INFO  20:42:59,281 - #21 .
INFO  20:42:59,281 - #48 neg
INFO  20:42:59,281 - #35 =
INFO  20:42:59,281 - #12 new
INFO  20:42:59,281 - #48 int
INFO  20:42:59,281 - #26 [
INFO  20:42:59,281 - #48 size
INFO  20:42:59,281 - #27 ]
INFO  20:42:59,281 - #18 ;
INFO  20:42:59,281 - #13 read
INFO  20:42:59,281 - #22 (
INFO  20:42:59,282 - #48 x
INFO  20:42:59,282 - #23 )
INFO  20:42:59,282 - #18 ;
INFO  20:42:59,282 - #26 [
INFO  20:42:59,282 - #48 i
INFO  20:42:59,282 - #20 ,
INFO  20:42:59,282 - #48 x
INFO  20:42:59,282 - #27 ]
INFO  20:42:59,282 - #35 =
INFO  20:42:59,282 - #48 arr
INFO  20:42:59,282 - #18 ;
INFO  20:42:59,282 - #11 while
INFO  20:42:59,282 - #22 (
INFO  20:42:59,282 - #48 i
INFO  20:42:59,282 - #32 <
INFO  20:42:59,282 - #48 size
INFO  20:42:59,283 - #23 )
INFO  20:42:59,283 - #24 {
INFO  20:42:59,283 - #48 val
INFO  20:42:59,283 - #21 .
INFO  20:42:59,283 - #48 putp
INFO  20:42:59,283 - #22 (
INFO  20:42:59,283 - #45 0
INFO  20:42:59,283 - #20 ,
INFO  20:42:59,283 - #48 i
INFO  20:42:59,283 - #23 )
INFO  20:42:59,283 - #18 ;
INFO  20:42:59,284 - #48 val
INFO  20:42:59,284 - #21 .
INFO  20:42:59,284 - #48 putn
INFO  20:42:59,284 - #22 (
INFO  20:42:59,284 - #45 0
INFO  20:42:59,284 - #20 ,
INFO  20:42:59,284 - #48 i
INFO  20:42:59,284 - #23 )
INFO  20:42:59,284 - #18 ;
INFO  20:42:59,285 - #48 i
INFO  20:42:59,285 - #38 ++
INFO  20:42:59,285 - #18 ;
INFO  20:42:59,285 - #25 }
INFO  20:42:59,285 - #48 f
INFO  20:42:59,285 - #22 (
INFO  20:42:59,285 - #48 c
INFO  20:42:59,285 - #20 ,
INFO  20:42:59,285 - #48 x
INFO  20:42:59,285 - #20 ,
INFO  20:42:59,285 - #48 i
INFO  20:42:59,285 - #23 )
INFO  20:42:59,285 - #18 ;
INFO  20:42:59,285 - #13 read
INFO  20:42:59,286 - #22 (
INFO  20:42:59,286 - #48 rows
INFO  20:42:59,286 - #23 )
INFO  20:42:59,286 - #18 ;
INFO  20:42:59,286 - #48 x
INFO  20:42:59,286 - #35 =
INFO  20:42:59,286 - #48 rows
INFO  20:42:59,286 - #18 ;
INFO  20:42:59,286 - #11 while
INFO  20:42:59,286 - #22 (
INFO  20:42:59,286 - #46 true
INFO  20:42:59,286 - #23 )
