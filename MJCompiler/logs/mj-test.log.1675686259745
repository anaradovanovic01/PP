INFO  13:23:28,078 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:23:28,108 - #2 program
INFO  13:23:28,108 - #46 p
INFO  13:23:28,108 - #9 const
INFO  13:23:28,109 - #46 int
INFO  13:23:28,109 - #46 size
INFO  13:23:28,109 - #35 =
INFO  13:23:28,109 - #45 10
INFO  13:23:28,109 - #18 ;
INFO  13:23:28,109 - #7 class
INFO  13:23:28,110 - #46 Table
INFO  13:23:28,110 - #24 {
INFO  13:23:28,110 - #46 int
INFO  13:23:28,110 - #46 pos
INFO  13:23:28,110 - #26 [
INFO  13:23:28,110 - #27 ]
INFO  13:23:28,110 - #20 ,
INFO  13:23:28,110 - #46 neg
INFO  13:23:28,110 - #26 [
INFO  13:23:28,110 - #27 ]
INFO  13:23:28,111 - #20 ,
INFO  13:23:28,212 - #46 factor
INFO  13:23:28,212 - #18 ;
INFO  13:23:28,212 - #24 {
INFO  13:23:28,213 - #5 void
INFO  13:23:28,213 - #46 putp
INFO  13:23:28,213 - #22 (
INFO  13:23:28,213 - #46 int
INFO  13:23:28,213 - #46 a
INFO  13:23:28,213 - #20 ,
INFO  13:23:28,213 - #46 int
INFO  13:23:28,214 - #46 idx
INFO  13:23:28,214 - #23 )
INFO  13:23:28,214 - #24 {
INFO  13:23:28,214 - #46 pos
INFO  13:23:28,214 - #26 [
INFO  13:23:28,214 - #46 idx
INFO  13:23:28,214 - #27 ]
INFO  13:23:28,214 - #35 =
INFO  13:23:28,214 - #46 a
INFO  13:23:28,215 - #18 ;
INFO  13:23:28,215 - #25 }
INFO  13:23:28,215 - #5 void
INFO  13:23:28,215 - #46 putn
INFO  13:23:28,216 - #22 (
INFO  13:23:28,216 - #46 int
INFO  13:23:28,216 - #46 a
INFO  13:23:28,216 - #20 ,
INFO  13:23:28,216 - #46 int
INFO  13:23:28,216 - #46 idx
INFO  13:23:28,216 - #23 )
INFO  13:23:28,216 - #24 {
INFO  13:23:28,216 - #46 neg
INFO  13:23:28,216 - #26 [
INFO  13:23:28,216 - #46 idx
INFO  13:23:28,216 - #27 ]
INFO  13:23:28,216 - #35 =
INFO  13:23:28,216 - #46 a
INFO  13:23:28,216 - #18 ;
INFO  13:23:28,216 - #25 }
INFO  13:23:28,216 - #46 int
INFO  13:23:28,216 - #46 getp
INFO  13:23:28,216 - #22 (
INFO  13:23:28,217 - #46 int
INFO  13:23:28,217 - #46 idx
INFO  13:23:28,217 - #23 )
INFO  13:23:28,217 - #24 {
INFO  13:23:28,217 - #4 return
INFO  13:23:28,217 - #46 pos
INFO  13:23:28,217 - #26 [
INFO  13:23:28,217 - #46 idx
INFO  13:23:28,217 - #27 ]
INFO  13:23:28,217 - #18 ;
INFO  13:23:28,217 - #25 }
INFO  13:23:28,217 - #46 int
INFO  13:23:28,217 - #46 getn
INFO  13:23:28,217 - #22 (
INFO  13:23:28,217 - #46 int
INFO  13:23:28,217 - #46 idx
INFO  13:23:28,217 - #23 )
INFO  13:23:28,217 - #24 {
INFO  13:23:28,217 - #4 return
INFO  13:23:28,217 - #46 neg
INFO  13:23:28,217 - #26 [
INFO  13:23:28,217 - #46 idx
INFO  13:23:28,218 - #27 ]
INFO  13:23:28,218 - #18 ;
INFO  13:23:28,218 - #25 }
INFO  13:23:28,218 - #25 }
INFO  13:23:28,218 - #25 }
INFO  13:23:28,218 - #46 Table
INFO  13:23:28,218 - #46 val
INFO  13:23:28,218 - #18 ;
INFO  13:23:28,218 - #46 Int
INFO  13:23:28,218 - #46 rows
INFO  13:23:28,218 - #20 ,
INFO  13:23:28,218 - #46 columns
INFO  13:23:28,218 - #18 ;
INFO  13:23:28,218 - #24 {
INFO  13:23:28,218 - #5 void
INFO  13:23:28,218 - #46 f
INFO  13:23:28,218 - #22 (
INFO  13:23:28,218 - #46 char
INFO  13:23:28,219 - #46 ch
INFO  13:23:28,219 - #20 ,
INFO  13:23:28,219 - #46 int
INFO  13:23:28,219 - #46 a
INFO  13:23:28,219 - #20 ,
INFO  13:23:28,219 - #46 int
INFO  13:23:28,219 - #46 arg
INFO  13:23:28,219 - #23 )
INFO  13:23:28,219 - #46 int
INFO  13:23:28,219 - #46 x
INFO  13:23:28,219 - #18 ;
INFO  13:23:28,219 - #24 {
INFO  13:23:28,219 - #46 x
INFO  13:23:28,219 - #35 =
INFO  13:23:28,219 - #46 arg
INFO  13:23:28,219 - #18 ;
INFO  13:23:28,219 - #25 }
INFO  13:23:28,220 - #5 void
INFO  13:23:28,220 - #46 main
INFO  13:23:28,220 - #22 (
INFO  13:23:28,220 - #23 )
INFO  13:23:28,221 - #46 int
INFO  13:23:28,221 - #46 x
INFO  13:23:28,221 - #20 ,
INFO  13:23:28,221 - #46 i
INFO  13:23:28,221 - #18 ;
INFO  13:23:28,221 - #46 char
INFO  13:23:28,221 - #46 c
INFO  13:23:28,221 - #20 ,
INFO  13:23:28,221 - #46 int
INFO  13:23:28,221 - #46 arr
ERROR 13:23:28,221 - 
Sintaksna greska na liniji 24
INFO  13:23:28,221 - #26 [
INFO  13:23:28,221 - #27 ]
INFO  13:23:28,221 - #18 ;
INFO  13:23:28,222 - #24 {
INFO  13:23:28,222 - #46 arr
INFO  13:23:28,222 - #35 =
ERROR 13:23:28,222 - Izvrsen oporavak greske u definiciji globalne promenljive do ; u liniji 8
ERROR 13:23:28,222 - 
Sintaksna greska na liniji 27
INFO  13:23:28,222 - #12 new
INFO  13:23:28,222 - #46 int
INFO  13:23:28,223 - #26 [
INFO  13:23:28,223 - #45 3
INFO  13:23:28,223 - #27 ]
INFO  13:23:28,223 - #18 ;
INFO  13:23:28,223 - #46 i
INFO  13:23:28,223 - #35 =
INFO  13:23:28,223 - #45 0
INFO  13:23:28,223 - #18 ;
INFO  13:23:28,223 - #11 while
INFO  13:23:28,223 - #22 (
INFO  13:23:28,223 - #46 i
INFO  13:23:28,223 - #32 <
INFO  13:23:28,223 - #45 3
INFO  13:23:28,223 - #23 )
INFO  13:23:28,223 - #24 {
INFO  13:23:28,223 - #46 arr
INFO  13:23:28,223 - #26 [
INFO  13:23:28,223 - #46 i
INFO  13:23:28,223 - #27 ]
INFO  13:23:28,223 - #35 =
INFO  13:23:28,224 - #46 i
INFO  13:23:28,224 - #18 ;
INFO  13:23:28,224 - #46 i
INFO  13:23:28,224 - #38 ++
INFO  13:23:28,224 - #18 ;
INFO  13:23:28,224 - #25 }
INFO  13:23:28,224 - #46 arr
INFO  13:23:28,224 - #21 .
INFO  13:23:28,224 - #17 foreach
INFO  13:23:28,225 - #22 (
INFO  13:23:28,225 - #46 x
INFO  13:23:28,225 - #34 =>
INFO  13:23:28,225 - #3 print
INFO  13:23:28,225 - #22 (
INFO  13:23:28,225 - #46 x
INFO  13:23:28,225 - #23 )
INFO  13:23:28,225 - #18 ;
INFO  13:23:28,225 - #23 )
INFO  13:23:28,225 - #18 ;
INFO  13:23:28,225 - #46 val
INFO  13:23:28,225 - #21 .
INFO  13:23:28,225 - #46 pos
INFO  13:23:28,225 - #35 =
INFO  13:23:28,225 - #12 new
INFO  13:23:28,225 - #46 int
INFO  13:23:28,225 - #26 [
INFO  13:23:28,225 - #46 size
INFO  13:23:28,225 - #27 ]
INFO  13:23:28,225 - #18 ;
INFO  13:23:28,225 - #46 val
INFO  13:23:28,225 - #21 .
INFO  13:23:28,225 - #46 neg
INFO  13:23:28,225 - #35 =
INFO  13:23:28,225 - #12 new
INFO  13:23:28,225 - #46 int
INFO  13:23:28,225 - #26 [
INFO  13:23:28,225 - #46 size
INFO  13:23:28,225 - #27 ]
INFO  13:23:28,225 - #18 ;
INFO  13:23:28,226 - #13 read
INFO  13:23:28,226 - #22 (
INFO  13:23:28,226 - #46 x
INFO  13:23:28,226 - #23 )
INFO  13:23:28,226 - #18 ;
INFO  13:23:28,226 - #26 [
INFO  13:23:28,226 - #46 i
INFO  13:23:28,226 - #20 ,
INFO  13:23:28,226 - #20 ,
INFO  13:23:28,226 - #46 x
INFO  13:23:28,226 - #27 ]
INFO  13:23:28,226 - #35 =
INFO  13:23:28,226 - #46 arr
INFO  13:23:28,226 - #18 ;
INFO  13:23:28,226 - #11 while
INFO  13:23:28,226 - #22 (
INFO  13:23:28,226 - #46 i
INFO  13:23:28,226 - #32 <
INFO  13:23:28,226 - #46 size
INFO  13:23:28,226 - #23 )
INFO  13:23:28,226 - #24 {
INFO  13:23:28,226 - #46 val
INFO  13:23:28,226 - #21 .
INFO  13:23:28,226 - #46 putp
INFO  13:23:28,226 - #22 (
INFO  13:23:28,226 - #45 0
INFO  13:23:28,226 - #20 ,
INFO  13:23:28,226 - #46 i
INFO  13:23:28,226 - #23 )
INFO  13:23:28,226 - #18 ;
INFO  13:23:28,226 - #46 val
INFO  13:23:28,226 - #21 .
INFO  13:23:28,226 - #46 putn
INFO  13:23:28,226 - #22 (
INFO  13:23:28,226 - #45 0
INFO  13:23:28,227 - #20 ,
INFO  13:23:28,227 - #46 i
INFO  13:23:28,227 - #23 )
INFO  13:23:28,227 - #18 ;
INFO  13:23:28,227 - #46 i
INFO  13:23:28,227 - #38 ++
INFO  13:23:28,227 - #18 ;
INFO  13:23:28,227 - #25 }
INFO  13:23:28,227 - #46 f
INFO  13:23:28,227 - #22 (
INFO  13:23:28,227 - #46 c
INFO  13:23:28,227 - #20 ,
INFO  13:23:28,227 - #46 x
INFO  13:23:28,227 - #20 ,
INFO  13:23:28,227 - #46 i
INFO  13:23:28,227 - #23 )
INFO  13:23:28,227 - #18 ;
INFO  13:23:28,227 - #13 read
INFO  13:23:28,227 - #22 (
INFO  13:23:28,227 - #46 rows
INFO  13:23:28,227 - #23 )
INFO  13:23:28,227 - #18 ;
INFO  13:23:28,227 - #46 x
INFO  13:23:28,227 - #35 =
INFO  13:23:28,227 - #46 rows
INFO  13:23:28,228 - #18 ;
INFO  13:23:28,228 - #11 while
INFO  13:23:28,228 - #22 (
INFO  13:23:28,228 - #48 true
INFO  13:23:28,228 - #23 )
INFO  13:23:28,228 - #24 {
INFO  13:23:28,228 - #49 if
INFO  13:23:28,228 - #22 (
INFO  13:23:28,228 - #46 x
INFO  13:23:28,228 - #33 <=
INFO  13:23:28,228 - #45 0
INFO  13:23:28,228 - #23 )
INFO  13:23:28,228 - #6 break
INFO  13:23:28,228 - #18 ;
INFO  13:23:28,228 - #49 if
INFO  13:23:28,228 - #22 (
INFO  13:23:28,228 - #45 0
INFO  13:23:28,228 - #33 <=
INFO  13:23:28,228 - #46 x
INFO  13:23:28,228 - #36 &&
INFO  13:23:28,228 - #46 x
INFO  13:23:28,228 - #32 <
INFO  13:23:28,228 - #46 size
INFO  13:23:28,228 - #23 )
INFO  13:23:28,228 - #24 {
INFO  13:23:28,228 - #46 val
INFO  13:23:28,228 - #21 .
INFO  13:23:28,228 - #46 putp
INFO  13:23:28,228 - #22 (
INFO  13:23:28,228 - #46 val
INFO  13:23:28,228 - #21 .
INFO  13:23:28,228 - #46 getp
INFO  13:23:28,228 - #22 (
INFO  13:23:28,229 - #46 x
INFO  13:23:28,229 - #23 )
INFO  13:23:28,229 - #40 +
INFO  13:23:28,229 - #45 1
INFO  13:23:28,229 - #23 )
INFO  13:23:28,229 - #18 ;
INFO  13:23:28,229 - #25 }
INFO  13:23:28,229 - #50 else
INFO  13:23:28,229 - #49 if
INFO  13:23:28,229 - #22 (
INFO  13:23:28,229 - #41 -
INFO  13:23:28,229 - #46 size
INFO  13:23:28,229 - #32 <
INFO  13:23:28,229 - #46 x
INFO  13:23:28,229 - #36 &&
INFO  13:23:28,229 - #46 x
INFO  13:23:28,229 - #32 <
INFO  13:23:28,229 - #45 0
INFO  13:23:28,229 - #23 )
INFO  13:23:28,229 - #24 {
INFO  13:23:28,229 - #46 val
INFO  13:23:28,229 - #21 .
INFO  13:23:28,229 - #46 putn
INFO  13:23:28,229 - #22 (
INFO  13:23:28,229 - #46 val
INFO  13:23:28,229 - #21 .
INFO  13:23:28,229 - #46 getn
INFO  13:23:28,229 - #22 (
INFO  13:23:28,229 - #41 -
INFO  13:23:28,229 - #46 x
INFO  13:23:28,229 - #23 )
INFO  13:23:28,229 - #40 +
INFO  13:23:28,229 - #45 1
INFO  13:23:28,229 - #23 )
INFO  13:23:28,229 - #18 ;
INFO  13:23:28,229 - #25 }
INFO  13:23:28,229 - #13 read
INFO  13:23:28,229 - #22 (
INFO  13:23:28,229 - #46 x
INFO  13:23:28,229 - #23 )
INFO  13:23:28,230 - #18 ;
INFO  13:23:28,230 - #25 }
INFO  13:23:28,230 - #25 }
INFO  13:23:28,230 - #25 }
ERROR 13:23:28,230 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
