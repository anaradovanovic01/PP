INFO  20:51:00,590 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:51:00,632 - #2 program
INFO  20:51:00,632 - #48 p
INFO  20:51:00,632 - #9 const
INFO  20:51:00,633 - #48 int
INFO  20:51:00,633 - #48 size
INFO  20:51:00,634 - #35 =
INFO  20:51:00,634 - #45 10
INFO  20:51:00,634 - #18 ;
INFO  20:51:00,634 - #7 class
INFO  20:51:00,634 - #48 Table
INFO  20:51:00,634 - #24 {
INFO  20:51:00,635 - #48 int
INFO  20:51:00,635 - #48 pos
INFO  20:51:00,635 - #26 [
INFO  20:51:00,636 - #27 ]
INFO  20:51:00,636 - #20 ,
INFO  20:51:00,636 - #48 neg
INFO  20:51:00,636 - #26 [
INFO  20:51:00,636 - #27 ]
INFO  20:51:00,636 - #20 ,
INFO  20:51:00,636 - #48 factor
INFO  20:51:00,636 - #18 ;
INFO  20:51:00,636 - #24 {
INFO  20:51:00,637 - #48 Table
INFO  20:51:00,638 - #22 (
INFO  20:51:00,638 - #48 int
INFO  20:51:00,638 - #48 factor
INFO  20:51:00,638 - #23 )
INFO  20:51:00,638 - #24 {
INFO  20:51:00,638 - #48 factor
INFO  20:51:00,639 - #35 =
INFO  20:51:00,639 - #48 factor
INFO  20:51:00,640 - #18 ;
INFO  20:51:00,640 - #25 }
INFO  20:51:00,640 - #5 void
INFO  20:51:00,641 - #48 putp
INFO  20:51:00,641 - #22 (
INFO  20:51:00,641 - #48 int
INFO  20:51:00,641 - #48 a
INFO  20:51:00,641 - #20 ,
INFO  20:51:00,641 - #48 int
INFO  20:51:00,641 - #48 idx
INFO  20:51:00,641 - #23 )
INFO  20:51:00,641 - #24 {
INFO  20:51:00,641 - #48 pos
INFO  20:51:00,641 - #26 [
INFO  20:51:00,642 - #48 idx
INFO  20:51:00,642 - #27 ]
INFO  20:51:00,642 - #35 =
INFO  20:51:00,642 - #48 a
INFO  20:51:00,642 - #18 ;
INFO  20:51:00,642 - #25 }
INFO  20:51:00,642 - #5 void
INFO  20:51:00,642 - #48 putn
INFO  20:51:00,643 - #22 (
INFO  20:51:00,643 - #48 int
INFO  20:51:00,643 - #48 a
INFO  20:51:00,643 - #20 ,
INFO  20:51:00,643 - #48 int
INFO  20:51:00,643 - #48 idx
INFO  20:51:00,643 - #23 )
INFO  20:51:00,643 - #24 {
INFO  20:51:00,643 - #48 neg
INFO  20:51:00,643 - #26 [
INFO  20:51:00,643 - #48 idx
INFO  20:51:00,644 - #27 ]
INFO  20:51:00,644 - #35 =
INFO  20:51:00,644 - #48 a
INFO  20:51:00,644 - #18 ;
INFO  20:51:00,644 - #25 }
INFO  20:51:00,644 - #48 int
INFO  20:51:00,644 - #48 getp
INFO  20:51:00,644 - #22 (
INFO  20:51:00,644 - #48 int
INFO  20:51:00,644 - #48 idx
INFO  20:51:00,644 - #23 )
INFO  20:51:00,644 - #24 {
INFO  20:51:00,644 - #4 return
INFO  20:51:00,644 - #48 pos
INFO  20:51:00,644 - #26 [
INFO  20:51:00,645 - #48 idx
INFO  20:51:00,645 - #27 ]
INFO  20:51:00,645 - #18 ;
INFO  20:51:00,645 - #25 }
INFO  20:51:00,645 - #48 int
INFO  20:51:00,645 - #48 getn
INFO  20:51:00,645 - #22 (
INFO  20:51:00,645 - #48 int
INFO  20:51:00,646 - #48 idx
INFO  20:51:00,646 - #23 )
INFO  20:51:00,646 - #24 {
INFO  20:51:00,646 - #4 return
INFO  20:51:00,646 - #48 neg
INFO  20:51:00,646 - #26 [
INFO  20:51:00,646 - #48 idx
INFO  20:51:00,646 - #27 ]
INFO  20:51:00,646 - #18 ;
INFO  20:51:00,646 - #25 }
INFO  20:51:00,646 - #25 }
INFO  20:51:00,646 - #25 }
INFO  20:51:00,646 - #48 Table
INFO  20:51:00,646 - #48 val
INFO  20:51:00,646 - #18 ;
INFO  20:51:00,646 - #48 Int
INFO  20:51:00,647 - #48 rows
INFO  20:51:00,647 - #20 ,
INFO  20:51:00,647 - #48 columns
INFO  20:51:00,647 - #18 ;
INFO  20:51:00,647 - #24 {
INFO  20:51:00,647 - #5 void
INFO  20:51:00,647 - #48 f
INFO  20:51:00,647 - #22 (
INFO  20:51:00,647 - #48 char
INFO  20:51:00,647 - #48 ch
INFO  20:51:00,647 - #20 ,
INFO  20:51:00,647 - #48 int
INFO  20:51:00,647 - #48 a
INFO  20:51:00,647 - #20 ,
INFO  20:51:00,647 - #48 int
INFO  20:51:00,647 - #48 arg
INFO  20:51:00,648 - #23 )
INFO  20:51:00,648 - #48 int
INFO  20:51:00,648 - #48 x
INFO  20:51:00,648 - #18 ;
INFO  20:51:00,648 - #24 {
INFO  20:51:00,648 - #48 x
INFO  20:51:00,648 - #35 =
INFO  20:51:00,649 - #48 arg
INFO  20:51:00,649 - #18 ;
INFO  20:51:00,649 - #25 }
INFO  20:51:00,649 - #5 void
INFO  20:51:00,649 - #48 main
INFO  20:51:00,649 - #22 (
INFO  20:51:00,649 - #23 )
INFO  20:51:00,650 - #48 int
INFO  20:51:00,650 - #48 x
INFO  20:51:00,650 - #20 ,
INFO  20:51:00,650 - #48 i
INFO  20:51:00,650 - #18 ;
INFO  20:51:00,650 - #48 char
INFO  20:51:00,650 - #48 c
INFO  20:51:00,651 - #18 ;
INFO  20:51:00,651 - #48 int
INFO  20:51:00,651 - #48 arr
INFO  20:51:00,651 - #26 [
INFO  20:51:00,651 - #27 ]
INFO  20:51:00,651 - #18 ;
INFO  20:51:00,651 - #24 {
INFO  20:51:00,651 - #48 val
INFO  20:51:00,651 - #35 =
INFO  20:51:00,651 - #12 new
INFO  20:51:00,651 - #48 Table
INFO  20:51:00,651 - #22 (
INFO  20:51:00,652 - #45 2
INFO  20:51:00,652 - #23 )
INFO  20:51:00,652 - #18 ;
INFO  20:51:00,652 - #48 arr
INFO  20:51:00,652 - #35 =
INFO  20:51:00,652 - #12 new
INFO  20:51:00,653 - #48 int
INFO  20:51:00,653 - #26 [
INFO  20:51:00,653 - #45 3
INFO  20:51:00,653 - #27 ]
INFO  20:51:00,653 - #18 ;
INFO  20:51:00,655 - #48 i
INFO  20:51:00,655 - #35 =
INFO  20:51:00,656 - #45 0
INFO  20:51:00,656 - #18 ;
INFO  20:51:00,656 - #11 while
INFO  20:51:00,656 - #22 (
INFO  20:51:00,656 - #48 i
INFO  20:51:00,656 - #32 <
INFO  20:51:00,656 - #45 3
INFO  20:51:00,658 - #23 )
INFO  20:51:00,658 - #24 {
INFO  20:51:00,658 - #48 arr
INFO  20:51:00,658 - #26 [
INFO  20:51:00,658 - #48 i
INFO  20:51:00,658 - #27 ]
INFO  20:51:00,658 - #35 =
INFO  20:51:00,658 - #48 i
INFO  20:51:00,658 - #18 ;
INFO  20:51:00,658 - #48 i
INFO  20:51:00,658 - #38 ++
INFO  20:51:00,658 - #18 ;
INFO  20:51:00,658 - #25 }
INFO  20:51:00,658 - #48 arr
INFO  20:51:00,658 - #21 .
INFO  20:51:00,658 - #17 foreach
INFO  20:51:00,658 - #22 (
INFO  20:51:00,658 - #48 x
INFO  20:51:00,659 - #34 =>
INFO  20:51:00,659 - #3 print
INFO  20:51:00,659 - #22 (
INFO  20:51:00,659 - #48 x
INFO  20:51:00,659 - #23 )
INFO  20:51:00,659 - #18 ;
INFO  20:51:00,659 - #23 )
INFO  20:51:00,659 - #18 ;
INFO  20:51:00,659 - #48 val
INFO  20:51:00,659 - #21 .
INFO  20:51:00,659 - #48 pos
INFO  20:51:00,659 - #35 =
INFO  20:51:00,659 - #12 new
INFO  20:51:00,659 - #48 int
INFO  20:51:00,659 - #26 [
INFO  20:51:00,659 - #48 size
INFO  20:51:00,659 - #27 ]
INFO  20:51:00,659 - #18 ;
INFO  20:51:00,659 - #48 val
INFO  20:51:00,660 - #21 .
INFO  20:51:00,660 - #48 neg
INFO  20:51:00,660 - #35 =
INFO  20:51:00,660 - #12 new
INFO  20:51:00,660 - #48 int
INFO  20:51:00,660 - #26 [
INFO  20:51:00,660 - #48 size
INFO  20:51:00,660 - #27 ]
INFO  20:51:00,660 - #18 ;
INFO  20:51:00,660 - #13 read
INFO  20:51:00,660 - #22 (
INFO  20:51:00,661 - #48 x
INFO  20:51:00,661 - #23 )
INFO  20:51:00,661 - #18 ;
INFO  20:51:00,661 - #26 [
INFO  20:51:00,661 - #48 i
INFO  20:51:00,661 - #20 ,
INFO  20:51:00,661 - #48 x
INFO  20:51:00,661 - #27 ]
INFO  20:51:00,661 - #35 =
INFO  20:51:00,661 - #48 arr
INFO  20:51:00,661 - #18 ;
INFO  20:51:00,661 - #11 while
INFO  20:51:00,661 - #22 (
INFO  20:51:00,661 - #48 i
INFO  20:51:00,661 - #32 <
INFO  20:51:00,661 - #48 size
INFO  20:51:00,661 - #23 )
INFO  20:51:00,661 - #24 {
INFO  20:51:00,661 - #48 val
INFO  20:51:00,661 - #21 .
INFO  20:51:00,661 - #48 putp
INFO  20:51:00,661 - #22 (
INFO  20:51:00,662 - #45 0
INFO  20:51:00,662 - #20 ,
INFO  20:51:00,662 - #48 i
INFO  20:51:00,662 - #23 )
INFO  20:51:00,662 - #18 ;
INFO  20:51:00,662 - #48 val
INFO  20:51:00,662 - #21 .
INFO  20:51:00,662 - #48 putn
INFO  20:51:00,662 - #22 (
INFO  20:51:00,662 - #45 0
INFO  20:51:00,662 - #20 ,
INFO  20:51:00,662 - #48 i
INFO  20:51:00,663 - #23 )
INFO  20:51:00,663 - #18 ;
INFO  20:51:00,663 - #48 i
INFO  20:51:00,663 - #38 ++
INFO  20:51:00,663 - #18 ;
INFO  20:51:00,663 - #25 }
INFO  20:51:00,663 - #48 f
INFO  20:51:00,663 - #22 (
INFO  20:51:00,663 - #48 c
INFO  20:51:00,663 - #20 ,
INFO  20:51:00,663 - #48 x
INFO  20:51:00,663 - #20 ,
INFO  20:51:00,663 - #48 i
INFO  20:51:00,663 - #23 )
INFO  20:51:00,663 - #18 ;
INFO  20:51:00,663 - #13 read
INFO  20:51:00,663 - #22 (
INFO  20:51:00,663 - #48 rows
INFO  20:51:00,663 - #23 )
INFO  20:51:00,663 - #18 ;
INFO  20:51:00,663 - #48 x
INFO  20:51:00,663 - #35 =
INFO  20:51:00,664 - #48 rows
INFO  20:51:00,664 - #18 ;
INFO  20:51:00,664 - #11 while
INFO  20:51:00,664 - #22 (
INFO  20:51:00,664 - #46 true
INFO  20:51:00,664 - #23 )
