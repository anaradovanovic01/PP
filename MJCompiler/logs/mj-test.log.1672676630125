INFO  17:18:56,244 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:18:56,278 - #2 program
INFO  17:18:56,278 - #46 p
INFO  17:18:56,278 - #9 const
INFO  17:18:56,279 - #46 int
INFO  17:18:56,279 - #46 size
INFO  17:18:56,280 - #35 =
INFO  17:18:56,280 - #45 10
INFO  17:18:56,280 - #18 ;
INFO  17:18:56,280 - #7 class
INFO  17:18:56,281 - #46 Table
INFO  17:18:56,281 - #24 {
INFO  17:18:56,282 - #46 int
INFO  17:18:56,282 - #46 pos
INFO  17:18:56,282 - #26 [
INFO  17:18:56,283 - #27 ]
INFO  17:18:56,283 - #20 ,
INFO  17:18:56,283 - #46 neg
INFO  17:18:56,283 - #26 [
INFO  17:18:56,283 - #27 ]
INFO  17:18:56,283 - #20 ,
INFO  17:18:56,284 - #46 factor
INFO  17:18:56,284 - #18 ;
INFO  17:18:56,284 - #24 {
INFO  17:18:56,284 - #46 Table
INFO  17:18:56,285 - #22 (
INFO  17:18:56,285 - #46 int
INFO  17:18:56,285 - #46 factor
INFO  17:18:56,285 - #23 )
INFO  17:18:56,285 - #24 {
INFO  17:18:56,285 - #46 factor
INFO  17:18:56,286 - #35 =
INFO  17:18:56,286 - #46 factor
INFO  17:18:56,286 - #18 ;
INFO  17:18:56,287 - #25 }
INFO  17:18:56,287 - #5 void
INFO  17:18:56,287 - #46 putp
INFO  17:18:56,287 - #22 (
INFO  17:18:56,288 - #46 int
INFO  17:18:56,288 - #46 a
INFO  17:18:56,288 - #20 ,
INFO  17:18:56,288 - #46 int
INFO  17:18:56,288 - #46 idx
INFO  17:18:56,288 - #23 )
INFO  17:18:56,288 - #24 {
INFO  17:18:56,288 - #46 pos
INFO  17:18:56,288 - #26 [
INFO  17:18:56,289 - #46 idx
INFO  17:18:56,289 - #27 ]
INFO  17:18:56,289 - #35 =
INFO  17:18:56,289 - #46 a
INFO  17:18:56,289 - #18 ;
INFO  17:18:56,289 - #25 }
INFO  17:18:56,289 - #5 void
INFO  17:18:56,290 - #46 putn
INFO  17:18:56,290 - #22 (
INFO  17:18:56,290 - #46 int
INFO  17:18:56,290 - #46 a
INFO  17:18:56,290 - #20 ,
INFO  17:18:56,291 - #46 int
INFO  17:18:56,291 - #46 idx
INFO  17:18:56,291 - #23 )
INFO  17:18:56,291 - #24 {
INFO  17:18:56,291 - #46 neg
INFO  17:18:56,291 - #26 [
INFO  17:18:56,291 - #46 idx
INFO  17:18:56,291 - #27 ]
INFO  17:18:56,291 - #35 =
INFO  17:18:56,291 - #46 a
INFO  17:18:56,291 - #18 ;
INFO  17:18:56,291 - #25 }
INFO  17:18:56,292 - #46 int
INFO  17:18:56,292 - #46 getp
INFO  17:18:56,292 - #22 (
INFO  17:18:56,292 - #46 int
INFO  17:18:56,292 - #46 idx
INFO  17:18:56,292 - #23 )
INFO  17:18:56,292 - #24 {
INFO  17:18:56,292 - #4 return
INFO  17:18:56,292 - #46 pos
INFO  17:18:56,292 - #26 [
INFO  17:18:56,292 - #46 idx
INFO  17:18:56,292 - #27 ]
INFO  17:18:56,292 - #18 ;
INFO  17:18:56,292 - #25 }
INFO  17:18:56,292 - #46 int
INFO  17:18:56,293 - #46 getn
INFO  17:18:56,293 - #22 (
INFO  17:18:56,293 - #46 int
INFO  17:18:56,293 - #46 idx
INFO  17:18:56,293 - #23 )
INFO  17:18:56,293 - #24 {
INFO  17:18:56,293 - #4 return
INFO  17:18:56,293 - #46 neg
INFO  17:18:56,293 - #26 [
INFO  17:18:56,293 - #46 idx
INFO  17:18:56,294 - #27 ]
INFO  17:18:56,294 - #18 ;
INFO  17:18:56,294 - #25 }
INFO  17:18:56,294 - #25 }
INFO  17:18:56,294 - #25 }
INFO  17:18:56,294 - #46 Table
INFO  17:18:56,294 - #46 val
INFO  17:18:56,294 - #18 ;
INFO  17:18:56,294 - #46 Int
INFO  17:18:56,295 - #46 rows
INFO  17:18:56,295 - #20 ,
INFO  17:18:56,295 - #46 columns
INFO  17:18:56,295 - #18 ;
INFO  17:18:56,295 - #24 {
INFO  17:18:56,295 - #5 void
INFO  17:18:56,295 - #46 f
INFO  17:18:56,295 - #22 (
INFO  17:18:56,295 - #46 char
INFO  17:18:56,295 - #46 ch
INFO  17:18:56,295 - #20 ,
INFO  17:18:56,295 - #46 int
INFO  17:18:56,295 - #46 a
INFO  17:18:56,295 - #20 ,
INFO  17:18:56,295 - #46 int
INFO  17:18:56,295 - #46 arg
INFO  17:18:56,296 - #23 )
INFO  17:18:56,296 - #46 int
INFO  17:18:56,296 - #46 x
INFO  17:18:56,296 - #18 ;
INFO  17:18:56,296 - #24 {
INFO  17:18:56,296 - #46 x
INFO  17:18:56,296 - #35 =
INFO  17:18:56,296 - #46 arg
INFO  17:18:56,296 - #18 ;
INFO  17:18:56,296 - #25 }
INFO  17:18:56,296 - #5 void
INFO  17:18:56,297 - #46 main
INFO  17:18:56,297 - #22 (
INFO  17:18:56,297 - #23 )
INFO  17:18:56,297 - #46 int
INFO  17:18:56,297 - #46 x
INFO  17:18:56,297 - #20 ,
INFO  17:18:56,297 - #46 i
INFO  17:18:56,297 - #18 ;
INFO  17:18:56,297 - #46 char
INFO  17:18:56,297 - #46 c
INFO  17:18:56,298 - #18 ;
INFO  17:18:56,298 - #46 int
INFO  17:18:56,298 - #46 arr
INFO  17:18:56,298 - #26 [
INFO  17:18:56,298 - #27 ]
INFO  17:18:56,298 - #18 ;
INFO  17:18:56,298 - #24 {
INFO  17:18:56,298 - #46 val
INFO  17:18:56,298 - #35 =
INFO  17:18:56,298 - #12 new
INFO  17:18:56,298 - #46 Table
INFO  17:18:56,298 - #22 (
INFO  17:18:56,298 - #45 2
INFO  17:18:56,298 - #23 )
INFO  17:18:56,299 - #18 ;
INFO  17:18:56,299 - #46 arr
INFO  17:18:56,299 - #35 =
INFO  17:18:56,299 - #12 new
INFO  17:18:56,299 - #46 int
INFO  17:18:56,299 - #26 [
INFO  17:18:56,299 - #45 3
INFO  17:18:56,299 - #27 ]
INFO  17:18:56,299 - #18 ;
INFO  17:18:56,299 - #46 i
INFO  17:18:56,299 - #35 =
INFO  17:18:56,299 - #45 0
INFO  17:18:56,299 - #18 ;
INFO  17:18:56,299 - #11 while
INFO  17:18:56,299 - #22 (
INFO  17:18:56,300 - #46 i
INFO  17:18:56,300 - #32 <
INFO  17:18:56,300 - #45 3
INFO  17:18:56,300 - #23 )
INFO  17:18:56,301 - #24 {
INFO  17:18:56,301 - #46 arr
INFO  17:18:56,301 - #26 [
INFO  17:18:56,301 - #46 i
INFO  17:18:56,301 - #27 ]
INFO  17:18:56,301 - #35 =
INFO  17:18:56,302 - #46 i
INFO  17:18:56,302 - #18 ;
INFO  17:18:56,302 - #46 i
INFO  17:18:56,302 - #38 ++
INFO  17:18:56,302 - #18 ;
INFO  17:18:56,302 - #25 }
INFO  17:18:56,302 - #46 arr
INFO  17:18:56,302 - #21 .
INFO  17:18:56,302 - #17 foreach
INFO  17:18:56,302 - #22 (
INFO  17:18:56,302 - #46 x
INFO  17:18:56,302 - #34 =>
INFO  17:18:56,303 - #3 print
INFO  17:18:56,303 - #22 (
INFO  17:18:56,303 - #46 x
INFO  17:18:56,303 - #23 )
INFO  17:18:56,303 - #18 ;
INFO  17:18:56,303 - #23 )
INFO  17:18:56,303 - #18 ;
INFO  17:18:56,303 - #46 val
INFO  17:18:56,303 - #21 .
INFO  17:18:56,303 - #46 pos
INFO  17:18:56,303 - #35 =
INFO  17:18:56,303 - #12 new
INFO  17:18:56,303 - #46 int
INFO  17:18:56,303 - #26 [
INFO  17:18:56,304 - #46 size
INFO  17:18:56,304 - #27 ]
INFO  17:18:56,304 - #18 ;
INFO  17:18:56,304 - #46 val
INFO  17:18:56,304 - #21 .
INFO  17:18:56,304 - #46 neg
INFO  17:18:56,304 - #35 =
INFO  17:18:56,304 - #12 new
INFO  17:18:56,304 - #46 int
INFO  17:18:56,304 - #26 [
INFO  17:18:56,304 - #46 size
INFO  17:18:56,304 - #27 ]
INFO  17:18:56,304 - #18 ;
INFO  17:18:56,304 - #13 read
INFO  17:18:56,304 - #22 (
INFO  17:18:56,304 - #46 x
INFO  17:18:56,305 - #23 )
INFO  17:18:56,305 - #18 ;
INFO  17:18:56,308 - #26 [
INFO  17:18:56,309 - #46 i
INFO  17:18:56,310 - #20 ,
INFO  17:18:56,310 - #46 x
INFO  17:18:56,312 - #27 ]
INFO  17:18:56,313 - #35 =
INFO  17:18:56,313 - #46 arr
INFO  17:18:56,313 - #18 ;
INFO  17:18:56,313 - #11 while
INFO  17:18:56,313 - #22 (
INFO  17:18:56,313 - #46 i
INFO  17:18:56,313 - #32 <
INFO  17:18:56,313 - #46 size
INFO  17:18:56,313 - #23 )
INFO  17:18:56,313 - #24 {
INFO  17:18:56,313 - #46 val
INFO  17:18:56,313 - #21 .
INFO  17:18:56,313 - #46 putp
INFO  17:18:56,313 - #22 (
INFO  17:18:56,314 - #45 0
INFO  17:18:56,314 - #20 ,
INFO  17:18:56,314 - #46 i
INFO  17:18:56,314 - #23 )
INFO  17:18:56,314 - #18 ;
INFO  17:18:56,314 - #46 val
INFO  17:18:56,314 - #21 .
INFO  17:18:56,314 - #46 putn
INFO  17:18:56,314 - #22 (
INFO  17:18:56,314 - #45 0
INFO  17:18:56,314 - #20 ,
INFO  17:18:56,314 - #46 i
INFO  17:18:56,314 - #23 )
INFO  17:18:56,314 - #18 ;
INFO  17:18:56,314 - #46 i
INFO  17:18:56,314 - #38 ++
INFO  17:18:56,315 - #18 ;
INFO  17:18:56,315 - #25 }
INFO  17:18:56,315 - #46 f
INFO  17:18:56,315 - #22 (
INFO  17:18:56,315 - #46 c
INFO  17:18:56,315 - #20 ,
INFO  17:18:56,315 - #46 x
INFO  17:18:56,315 - #20 ,
INFO  17:18:56,315 - #46 i
INFO  17:18:56,315 - #23 )
INFO  17:18:56,315 - #18 ;
INFO  17:18:56,315 - #13 read
INFO  17:18:56,315 - #22 (
INFO  17:18:56,315 - #46 rows
INFO  17:18:56,315 - #23 )
INFO  17:18:56,315 - #18 ;
INFO  17:18:56,315 - #46 x
INFO  17:18:56,315 - #35 =
INFO  17:18:56,315 - #46 rows
INFO  17:18:56,315 - #18 ;
INFO  17:18:56,315 - #11 while
INFO  17:18:56,315 - #22 (
INFO  17:18:56,316 - #50 true
ERROR 17:18:56,316 - 
Sintaksna greska na liniji 43
ERROR 17:18:56,316 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 43
