INFO  11:57:46,610 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:57:46,701 - #2 program
INFO  11:57:46,701 - #46 p
INFO  11:57:46,701 - #9 const
INFO  11:57:46,704 - #46 int
INFO  11:57:46,704 - #46 size
INFO  11:57:46,704 - #35 =
INFO  11:57:46,704 - #45 10
INFO  11:57:46,704 - #18 ;
INFO  11:57:46,705 - #7 class
INFO  11:57:46,707 - #46 Table
INFO  11:57:46,707 - #24 {
INFO  11:57:46,708 - #46 int
INFO  11:57:46,708 - #46 pos
INFO  11:57:46,708 - #26 [
INFO  11:57:46,709 - #27 ]
INFO  11:57:46,709 - #20 ,
INFO  11:57:46,709 - #46 neg
INFO  11:57:46,709 - #26 [
INFO  11:57:46,709 - #27 ]
INFO  11:57:46,709 - #20 ,
INFO  11:57:46,711 - #46 factor
INFO  11:57:46,711 - #18 ;
INFO  11:57:46,711 - #24 {
INFO  11:57:46,712 - #46 Table
INFO  11:57:46,713 - #22 (
INFO  11:57:46,713 - #46 int
INFO  11:57:46,713 - #46 factor
INFO  11:57:46,713 - #23 )
INFO  11:57:46,713 - #24 {
INFO  11:57:46,714 - #46 factor
INFO  11:57:46,714 - #35 =
INFO  11:57:46,715 - #46 factor
INFO  11:57:46,715 - #18 ;
INFO  11:57:46,716 - #25 }
INFO  11:57:46,716 - #5 void
INFO  11:57:46,718 - #46 putp
INFO  11:57:46,718 - #22 (
INFO  11:57:46,719 - #46 int
INFO  11:57:46,719 - #46 a
INFO  11:57:46,719 - #20 ,
INFO  11:57:46,719 - #46 int
INFO  11:57:46,719 - #46 idx
INFO  11:57:46,719 - #23 )
INFO  11:57:46,719 - #24 {
INFO  11:57:46,719 - #46 pos
INFO  11:57:46,719 - #26 [
INFO  11:57:46,719 - #46 idx
INFO  11:57:46,719 - #27 ]
INFO  11:57:46,719 - #35 =
INFO  11:57:46,720 - #46 a
INFO  11:57:46,720 - #18 ;
INFO  11:57:46,720 - #25 }
INFO  11:57:46,720 - #5 void
INFO  11:57:46,721 - #46 putn
INFO  11:57:46,721 - #22 (
INFO  11:57:46,721 - #46 int
INFO  11:57:46,721 - #46 a
INFO  11:57:46,721 - #20 ,
INFO  11:57:46,721 - #46 int
INFO  11:57:46,722 - #46 idx
INFO  11:57:46,722 - #23 )
INFO  11:57:46,722 - #24 {
INFO  11:57:46,722 - #46 neg
INFO  11:57:46,722 - #26 [
INFO  11:57:46,722 - #46 idx
INFO  11:57:46,722 - #27 ]
INFO  11:57:46,722 - #35 =
INFO  11:57:46,722 - #46 a
INFO  11:57:46,722 - #18 ;
INFO  11:57:46,723 - #25 }
INFO  11:57:46,723 - #46 int
INFO  11:57:46,723 - #46 getp
INFO  11:57:46,723 - #22 (
INFO  11:57:46,723 - #46 int
INFO  11:57:46,723 - #46 idx
INFO  11:57:46,723 - #23 )
INFO  11:57:46,723 - #24 {
INFO  11:57:46,724 - #4 return
INFO  11:57:46,724 - #46 pos
INFO  11:57:46,724 - #26 [
INFO  11:57:46,724 - #46 idx
INFO  11:57:46,724 - #27 ]
INFO  11:57:46,724 - #18 ;
INFO  11:57:46,725 - #25 }
INFO  11:57:46,725 - #46 int
INFO  11:57:46,725 - #46 getn
INFO  11:57:46,725 - #22 (
INFO  11:57:46,725 - #46 int
INFO  11:57:46,725 - #46 idx
INFO  11:57:46,725 - #23 )
INFO  11:57:46,725 - #24 {
INFO  11:57:46,725 - #4 return
INFO  11:57:46,725 - #46 neg
INFO  11:57:46,725 - #26 [
INFO  11:57:46,725 - #46 idx
INFO  11:57:46,725 - #27 ]
INFO  11:57:46,725 - #18 ;
INFO  11:57:46,725 - #25 }
INFO  11:57:46,726 - #25 }
INFO  11:57:46,726 - #25 }
INFO  11:57:46,726 - #46 Table
INFO  11:57:46,726 - #46 val
INFO  11:57:46,726 - #18 ;
INFO  11:57:46,726 - #46 Int
INFO  11:57:46,726 - #46 rows
INFO  11:57:46,726 - #20 ,
INFO  11:57:46,726 - #46 columns
INFO  11:57:46,727 - #18 ;
INFO  11:57:46,727 - #24 {
INFO  11:57:46,727 - #5 void
INFO  11:57:46,727 - #46 f
INFO  11:57:46,727 - #22 (
INFO  11:57:46,727 - #46 char
INFO  11:57:46,727 - #46 ch
INFO  11:57:46,727 - #20 ,
INFO  11:57:46,727 - #46 int
INFO  11:57:46,727 - #46 a
INFO  11:57:46,727 - #20 ,
INFO  11:57:46,727 - #46 int
INFO  11:57:46,727 - #46 arg
INFO  11:57:46,727 - #23 )
INFO  11:57:46,727 - #46 int
INFO  11:57:46,728 - #46 x
INFO  11:57:46,728 - #18 ;
INFO  11:57:46,728 - #24 {
INFO  11:57:46,728 - #46 x
INFO  11:57:46,728 - #35 =
INFO  11:57:46,729 - #46 arg
INFO  11:57:46,729 - #18 ;
INFO  11:57:46,729 - #25 }
INFO  11:57:46,729 - #5 void
INFO  11:57:46,729 - #46 main
INFO  11:57:46,729 - #22 (
INFO  11:57:46,729 - #23 )
INFO  11:57:46,729 - #46 int
INFO  11:57:46,729 - #46 x
INFO  11:57:46,729 - #20 ,
INFO  11:57:46,729 - #46 i
INFO  11:57:46,729 - #18 ;
INFO  11:57:46,729 - #46 char
INFO  11:57:46,729 - #46 c
INFO  11:57:46,729 - #18 ;
INFO  11:57:46,729 - #46 int
INFO  11:57:46,730 - #46 arr
INFO  11:57:46,730 - #26 [
INFO  11:57:46,730 - #27 ]
INFO  11:57:46,730 - #18 ;
INFO  11:57:46,730 - #24 {
INFO  11:57:46,730 - #46 val
INFO  11:57:46,730 - #35 =
INFO  11:57:46,730 - #12 new
INFO  11:57:46,730 - #46 Table
INFO  11:57:46,730 - #22 (
INFO  11:57:46,730 - #45 2
INFO  11:57:46,730 - #23 )
INFO  11:57:46,730 - #18 ;
INFO  11:57:46,730 - #46 arr
INFO  11:57:46,730 - #35 =
INFO  11:57:46,731 - #12 new
INFO  11:57:46,731 - #46 int
INFO  11:57:46,731 - #26 [
INFO  11:57:46,731 - #45 3
INFO  11:57:46,731 - #27 ]
INFO  11:57:46,731 - #18 ;
INFO  11:57:46,731 - #46 i
INFO  11:57:46,731 - #35 =
INFO  11:57:46,731 - #45 0
INFO  11:57:46,731 - #18 ;
INFO  11:57:46,731 - #11 while
INFO  11:57:46,731 - #22 (
INFO  11:57:46,731 - #46 i
INFO  11:57:46,731 - #32 <
INFO  11:57:46,731 - #45 3
INFO  11:57:46,732 - #23 )
INFO  11:57:46,732 - #24 {
INFO  11:57:46,732 - #46 arr
INFO  11:57:46,732 - #26 [
INFO  11:57:46,733 - #46 i
INFO  11:57:46,733 - #27 ]
INFO  11:57:46,733 - #35 =
INFO  11:57:46,733 - #46 i
INFO  11:57:46,733 - #18 ;
INFO  11:57:46,733 - #46 i
INFO  11:57:46,733 - #38 ++
INFO  11:57:46,733 - #18 ;
INFO  11:57:46,734 - #25 }
INFO  11:57:46,734 - #46 arr
INFO  11:57:46,734 - #21 .
INFO  11:57:46,734 - #17 foreach
INFO  11:57:46,734 - #22 (
INFO  11:57:46,734 - #46 x
INFO  11:57:46,734 - #34 =>
INFO  11:57:46,734 - #3 print
INFO  11:57:46,734 - #22 (
INFO  11:57:46,734 - #46 x
INFO  11:57:46,734 - #23 )
INFO  11:57:46,734 - #18 ;
INFO  11:57:46,734 - #23 )
INFO  11:57:46,734 - #18 ;
INFO  11:57:46,734 - #46 val
INFO  11:57:46,735 - #21 .
INFO  11:57:46,735 - #46 pos
INFO  11:57:46,735 - #35 =
INFO  11:57:46,735 - #12 new
INFO  11:57:46,735 - #46 int
INFO  11:57:46,735 - #26 [
INFO  11:57:46,735 - #46 size
INFO  11:57:46,735 - #27 ]
INFO  11:57:46,735 - #18 ;
INFO  11:57:46,735 - #46 val
INFO  11:57:46,735 - #21 .
INFO  11:57:46,735 - #46 neg
INFO  11:57:46,735 - #35 =
INFO  11:57:46,735 - #12 new
INFO  11:57:46,735 - #46 int
INFO  11:57:46,735 - #26 [
INFO  11:57:46,735 - #46 size
INFO  11:57:46,735 - #27 ]
INFO  11:57:46,735 - #18 ;
INFO  11:57:46,736 - #13 read
INFO  11:57:46,736 - #22 (
INFO  11:57:46,736 - #46 x
INFO  11:57:46,736 - #23 )
INFO  11:57:46,736 - #18 ;
INFO  11:57:46,736 - #26 [
INFO  11:57:46,736 - #46 i
INFO  11:57:46,736 - #20 ,
INFO  11:57:46,736 - #46 x
INFO  11:57:46,738 - #27 ]
INFO  11:57:46,738 - #35 =
INFO  11:57:46,738 - #46 arr
INFO  11:57:46,738 - #18 ;
INFO  11:57:46,738 - #11 while
INFO  11:57:46,738 - #22 (
INFO  11:57:46,739 - #46 i
INFO  11:57:46,739 - #32 <
INFO  11:57:46,739 - #46 size
INFO  11:57:46,739 - #23 )
INFO  11:57:46,739 - #24 {
INFO  11:57:46,739 - #46 val
INFO  11:57:46,739 - #21 .
INFO  11:57:46,739 - #46 putp
INFO  11:57:46,739 - #22 (
INFO  11:57:46,739 - #45 0
INFO  11:57:46,739 - #20 ,
INFO  11:57:46,739 - #46 i
INFO  11:57:46,739 - #23 )
INFO  11:57:46,739 - #18 ;
INFO  11:57:46,740 - #46 val
INFO  11:57:46,740 - #21 .
INFO  11:57:46,740 - #46 putn
INFO  11:57:46,740 - #22 (
INFO  11:57:46,740 - #45 0
INFO  11:57:46,740 - #20 ,
INFO  11:57:46,740 - #46 i
INFO  11:57:46,740 - #23 )
INFO  11:57:46,740 - #18 ;
INFO  11:57:46,740 - #46 i
INFO  11:57:46,740 - #38 ++
INFO  11:57:46,740 - #18 ;
INFO  11:57:46,740 - #25 }
INFO  11:57:46,740 - #46 f
INFO  11:57:46,740 - #22 (
INFO  11:57:46,740 - #46 c
INFO  11:57:46,740 - #20 ,
INFO  11:57:46,740 - #46 x
INFO  11:57:46,741 - #20 ,
INFO  11:57:46,741 - #46 i
INFO  11:57:46,741 - #23 )
INFO  11:57:46,741 - #18 ;
INFO  11:57:46,741 - #13 read
INFO  11:57:46,741 - #22 (
INFO  11:57:46,741 - #46 rows
INFO  11:57:46,741 - #23 )
INFO  11:57:46,741 - #18 ;
INFO  11:57:46,741 - #46 x
INFO  11:57:46,741 - #35 =
INFO  11:57:46,741 - #46 rows
INFO  11:57:46,741 - #18 ;
INFO  11:57:46,741 - #11 while
INFO  11:57:46,741 - #22 (
INFO  11:57:46,741 - #50 true
ERROR 11:57:46,741 - 
Sintaksna greska na liniji 43
ERROR 11:57:46,741 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 43
