INFO  11:48:39,500 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:48:39,531 - #2 program
INFO  11:48:39,531 - #46 p
INFO  11:48:39,531 - #9 const
INFO  11:48:39,532 - #46 int
INFO  11:48:39,532 - #46 size
INFO  11:48:39,533 - #35 =
INFO  11:48:39,533 - #45 10
INFO  11:48:39,533 - #18 ;
INFO  11:48:39,533 - #7 class
INFO  11:48:39,533 - #46 Table
INFO  11:48:39,534 - #24 {
INFO  11:48:39,534 - #46 int
INFO  11:48:39,534 - #46 pos
INFO  11:48:39,534 - #26 [
INFO  11:48:39,534 - #27 ]
INFO  11:48:39,534 - #20 ,
INFO  11:48:39,535 - #46 neg
INFO  11:48:39,535 - #26 [
INFO  11:48:39,535 - #27 ]
INFO  11:48:39,535 - #20 ,
INFO  11:48:39,535 - #46 factor
INFO  11:48:39,535 - #18 ;
INFO  11:48:39,535 - #24 {
INFO  11:48:39,536 - #46 Table
INFO  11:48:39,536 - #22 (
INFO  11:48:39,536 - #46 int
INFO  11:48:39,536 - #46 factor
INFO  11:48:39,536 - #23 )
INFO  11:48:39,537 - #24 {
INFO  11:48:39,537 - #46 factor
INFO  11:48:39,537 - #35 =
INFO  11:48:39,537 - #46 factor
INFO  11:48:39,538 - #18 ;
INFO  11:48:39,538 - #25 }
INFO  11:48:39,538 - #5 void
INFO  11:48:39,538 - #46 putp
INFO  11:48:39,539 - #22 (
INFO  11:48:39,539 - #46 int
INFO  11:48:39,539 - #46 a
INFO  11:48:39,539 - #20 ,
INFO  11:48:39,539 - #46 int
INFO  11:48:39,539 - #46 idx
INFO  11:48:39,539 - #23 )
INFO  11:48:39,539 - #24 {
INFO  11:48:39,539 - #46 pos
INFO  11:48:39,539 - #26 [
INFO  11:48:39,539 - #46 idx
INFO  11:48:39,539 - #27 ]
INFO  11:48:39,539 - #35 =
INFO  11:48:39,539 - #46 a
INFO  11:48:39,540 - #18 ;
INFO  11:48:39,540 - #25 }
INFO  11:48:39,540 - #5 void
INFO  11:48:39,540 - #46 putn
INFO  11:48:39,540 - #22 (
INFO  11:48:39,540 - #46 int
INFO  11:48:39,540 - #46 a
INFO  11:48:39,541 - #20 ,
INFO  11:48:39,541 - #46 int
INFO  11:48:39,541 - #46 idx
INFO  11:48:39,541 - #23 )
INFO  11:48:39,541 - #24 {
INFO  11:48:39,541 - #46 neg
INFO  11:48:39,541 - #26 [
INFO  11:48:39,541 - #46 idx
INFO  11:48:39,541 - #27 ]
INFO  11:48:39,541 - #35 =
INFO  11:48:39,541 - #46 a
INFO  11:48:39,541 - #18 ;
INFO  11:48:39,541 - #25 }
INFO  11:48:39,541 - #46 int
INFO  11:48:39,541 - #46 getp
INFO  11:48:39,541 - #22 (
INFO  11:48:39,542 - #46 int
INFO  11:48:39,542 - #46 idx
INFO  11:48:39,542 - #23 )
INFO  11:48:39,542 - #24 {
INFO  11:48:39,542 - #4 return
INFO  11:48:39,542 - #46 pos
INFO  11:48:39,542 - #26 [
INFO  11:48:39,542 - #46 idx
INFO  11:48:39,542 - #27 ]
INFO  11:48:39,542 - #18 ;
INFO  11:48:39,542 - #25 }
INFO  11:48:39,542 - #46 int
INFO  11:48:39,542 - #46 getn
INFO  11:48:39,542 - #22 (
INFO  11:48:39,542 - #46 int
INFO  11:48:39,542 - #46 idx
INFO  11:48:39,542 - #23 )
INFO  11:48:39,543 - #24 {
INFO  11:48:39,543 - #4 return
INFO  11:48:39,543 - #46 neg
INFO  11:48:39,543 - #26 [
INFO  11:48:39,543 - #46 idx
INFO  11:48:39,543 - #27 ]
INFO  11:48:39,543 - #18 ;
INFO  11:48:39,543 - #25 }
INFO  11:48:39,543 - #25 }
INFO  11:48:39,543 - #25 }
INFO  11:48:39,543 - #46 Table
INFO  11:48:39,544 - #46 val
INFO  11:48:39,544 - #18 ;
INFO  11:48:39,544 - #46 Int
INFO  11:48:39,544 - #46 rows
INFO  11:48:39,544 - #20 ,
INFO  11:48:39,544 - #46 columns
INFO  11:48:39,544 - #18 ;
INFO  11:48:39,544 - #24 {
INFO  11:48:39,544 - #5 void
INFO  11:48:39,544 - #46 f
INFO  11:48:39,544 - #22 (
INFO  11:48:39,544 - #46 char
INFO  11:48:39,545 - #46 ch
INFO  11:48:39,545 - #20 ,
INFO  11:48:39,545 - #46 int
INFO  11:48:39,545 - #46 a
INFO  11:48:39,545 - #20 ,
INFO  11:48:39,545 - #46 int
INFO  11:48:39,545 - #46 arg
INFO  11:48:39,545 - #23 )
INFO  11:48:39,545 - #46 int
INFO  11:48:39,545 - #46 x
INFO  11:48:39,545 - #18 ;
INFO  11:48:39,545 - #24 {
INFO  11:48:39,546 - #46 x
INFO  11:48:39,546 - #35 =
INFO  11:48:39,546 - #46 arg
INFO  11:48:39,546 - #18 ;
INFO  11:48:39,546 - #25 }
INFO  11:48:39,546 - #5 void
INFO  11:48:39,546 - #46 main
INFO  11:48:39,546 - #22 (
INFO  11:48:39,546 - #23 )
INFO  11:48:39,547 - #46 int
INFO  11:48:39,547 - #46 x
INFO  11:48:39,547 - #20 ,
INFO  11:48:39,547 - #46 i
INFO  11:48:39,547 - #18 ;
INFO  11:48:39,547 - #46 char
INFO  11:48:39,547 - #46 c
INFO  11:48:39,547 - #18 ;
INFO  11:48:39,547 - #46 int
INFO  11:48:39,547 - #46 arr
INFO  11:48:39,547 - #26 [
INFO  11:48:39,547 - #27 ]
INFO  11:48:39,547 - #18 ;
INFO  11:48:39,547 - #24 {
INFO  11:48:39,547 - #46 val
INFO  11:48:39,547 - #35 =
INFO  11:48:39,548 - #12 new
INFO  11:48:39,548 - #46 Table
INFO  11:48:39,548 - #22 (
INFO  11:48:39,548 - #45 2
INFO  11:48:39,548 - #23 )
INFO  11:48:39,548 - #18 ;
INFO  11:48:39,548 - #46 arr
INFO  11:48:39,548 - #35 =
INFO  11:48:39,548 - #12 new
INFO  11:48:39,548 - #46 int
INFO  11:48:39,548 - #26 [
INFO  11:48:39,548 - #45 3
INFO  11:48:39,548 - #27 ]
INFO  11:48:39,548 - #18 ;
INFO  11:48:39,550 - #46 i
INFO  11:48:39,550 - #35 =
INFO  11:48:39,550 - #45 0
INFO  11:48:39,550 - #18 ;
INFO  11:48:39,550 - #11 while
INFO  11:48:39,550 - #22 (
INFO  11:48:39,550 - #46 i
INFO  11:48:39,550 - #32 <
INFO  11:48:39,550 - #45 3
INFO  11:48:39,551 - #23 )
INFO  11:48:39,551 - #24 {
INFO  11:48:39,551 - #46 arr
INFO  11:48:39,551 - #26 [
INFO  11:48:39,552 - #46 i
INFO  11:48:39,552 - #27 ]
INFO  11:48:39,552 - #35 =
INFO  11:48:39,552 - #46 i
INFO  11:48:39,552 - #18 ;
INFO  11:48:39,552 - #46 i
INFO  11:48:39,552 - #38 ++
INFO  11:48:39,552 - #18 ;
INFO  11:48:39,552 - #25 }
INFO  11:48:39,552 - #46 arr
INFO  11:48:39,552 - #21 .
INFO  11:48:39,552 - #17 foreach
INFO  11:48:39,552 - #22 (
INFO  11:48:39,552 - #46 x
INFO  11:48:39,552 - #34 =>
INFO  11:48:39,552 - #3 print
INFO  11:48:39,553 - #22 (
INFO  11:48:39,553 - #46 x
INFO  11:48:39,553 - #23 )
INFO  11:48:39,553 - #18 ;
INFO  11:48:39,553 - #23 )
INFO  11:48:39,553 - #18 ;
INFO  11:48:39,553 - #46 val
INFO  11:48:39,553 - #21 .
INFO  11:48:39,553 - #46 pos
INFO  11:48:39,553 - #35 =
INFO  11:48:39,554 - #12 new
INFO  11:48:39,554 - #46 int
INFO  11:48:39,554 - #26 [
INFO  11:48:39,554 - #46 size
INFO  11:48:39,555 - #27 ]
INFO  11:48:39,555 - #18 ;
INFO  11:48:39,555 - #46 val
INFO  11:48:39,555 - #21 .
INFO  11:48:39,555 - #46 neg
INFO  11:48:39,555 - #35 =
INFO  11:48:39,555 - #12 new
INFO  11:48:39,555 - #46 int
INFO  11:48:39,555 - #26 [
INFO  11:48:39,555 - #46 size
INFO  11:48:39,555 - #27 ]
INFO  11:48:39,555 - #18 ;
INFO  11:48:39,555 - #13 read
INFO  11:48:39,555 - #22 (
INFO  11:48:39,555 - #46 x
INFO  11:48:39,555 - #23 )
INFO  11:48:39,555 - #18 ;
INFO  11:48:39,555 - #26 [
INFO  11:48:39,555 - #46 i
INFO  11:48:39,555 - #20 ,
INFO  11:48:39,555 - #46 x
INFO  11:48:39,555 - #27 ]
INFO  11:48:39,555 - #35 =
INFO  11:48:39,555 - #46 arr
INFO  11:48:39,555 - #18 ;
INFO  11:48:39,556 - #11 while
INFO  11:48:39,556 - #22 (
INFO  11:48:39,556 - #46 i
INFO  11:48:39,556 - #32 <
INFO  11:48:39,556 - #46 size
INFO  11:48:39,556 - #23 )
INFO  11:48:39,558 - #24 {
INFO  11:48:39,558 - #46 val
INFO  11:48:39,558 - #21 .
INFO  11:48:39,558 - #46 putp
INFO  11:48:39,558 - #22 (
INFO  11:48:39,558 - #45 0
INFO  11:48:39,558 - #20 ,
INFO  11:48:39,558 - #46 i
INFO  11:48:39,558 - #23 )
INFO  11:48:39,558 - #18 ;
INFO  11:48:39,558 - #46 val
INFO  11:48:39,558 - #21 .
INFO  11:48:39,558 - #46 putn
INFO  11:48:39,558 - #22 (
INFO  11:48:39,558 - #45 0
INFO  11:48:39,558 - #20 ,
INFO  11:48:39,558 - #46 i
INFO  11:48:39,558 - #23 )
INFO  11:48:39,559 - #18 ;
INFO  11:48:39,559 - #46 i
INFO  11:48:39,559 - #38 ++
INFO  11:48:39,559 - #18 ;
INFO  11:48:39,559 - #25 }
INFO  11:48:39,559 - #46 f
INFO  11:48:39,559 - #22 (
INFO  11:48:39,559 - #46 c
INFO  11:48:39,559 - #20 ,
INFO  11:48:39,559 - #46 x
INFO  11:48:39,559 - #20 ,
INFO  11:48:39,559 - #46 i
INFO  11:48:39,559 - #23 )
INFO  11:48:39,559 - #18 ;
INFO  11:48:39,559 - #13 read
INFO  11:48:39,559 - #22 (
INFO  11:48:39,559 - #46 rows
INFO  11:48:39,559 - #23 )
INFO  11:48:39,559 - #18 ;
INFO  11:48:39,559 - #46 x
INFO  11:48:39,559 - #35 =
INFO  11:48:39,559 - #46 rows
INFO  11:48:39,559 - #18 ;
INFO  11:48:39,559 - #11 while
INFO  11:48:39,559 - #22 (
INFO  11:48:39,560 - #50 true
ERROR 11:48:39,560 - 
Sintaksna greska na liniji 43
ERROR 11:48:39,560 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 43
