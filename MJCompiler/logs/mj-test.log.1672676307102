INFO  12:03:08,295 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:03:08,336 - #2 program
INFO  12:03:08,336 - #46 p
INFO  12:03:08,336 - #9 const
INFO  12:03:08,337 - #46 int
INFO  12:03:08,337 - #46 size
INFO  12:03:08,337 - #35 =
INFO  12:03:08,337 - #45 10
INFO  12:03:08,337 - #18 ;
INFO  12:03:08,338 - #7 class
INFO  12:03:08,338 - #46 Table
INFO  12:03:08,338 - #24 {
INFO  12:03:08,338 - #46 int
INFO  12:03:08,339 - #46 pos
INFO  12:03:08,339 - #26 [
INFO  12:03:08,339 - #27 ]
INFO  12:03:08,339 - #20 ,
INFO  12:03:08,340 - #46 neg
INFO  12:03:08,340 - #26 [
INFO  12:03:08,340 - #27 ]
INFO  12:03:08,340 - #20 ,
INFO  12:03:08,340 - #46 factor
INFO  12:03:08,340 - #18 ;
INFO  12:03:08,341 - #24 {
INFO  12:03:08,341 - #46 Table
INFO  12:03:08,341 - #22 (
INFO  12:03:08,342 - #46 int
INFO  12:03:08,342 - #46 factor
INFO  12:03:08,342 - #23 )
INFO  12:03:08,342 - #24 {
INFO  12:03:08,342 - #46 factor
INFO  12:03:08,342 - #35 =
INFO  12:03:08,342 - #46 factor
INFO  12:03:08,343 - #18 ;
INFO  12:03:08,344 - #25 }
INFO  12:03:08,344 - #5 void
INFO  12:03:08,344 - #46 putp
INFO  12:03:08,344 - #22 (
INFO  12:03:08,345 - #46 int
INFO  12:03:08,345 - #46 a
INFO  12:03:08,345 - #20 ,
INFO  12:03:08,345 - #46 int
INFO  12:03:08,345 - #46 idx
INFO  12:03:08,345 - #23 )
INFO  12:03:08,345 - #24 {
INFO  12:03:08,345 - #46 pos
INFO  12:03:08,345 - #26 [
INFO  12:03:08,346 - #46 idx
INFO  12:03:08,346 - #27 ]
INFO  12:03:08,346 - #35 =
INFO  12:03:08,346 - #46 a
INFO  12:03:08,346 - #18 ;
INFO  12:03:08,346 - #25 }
INFO  12:03:08,346 - #5 void
INFO  12:03:08,347 - #46 putn
INFO  12:03:08,347 - #22 (
INFO  12:03:08,347 - #46 int
INFO  12:03:08,347 - #46 a
INFO  12:03:08,347 - #20 ,
INFO  12:03:08,347 - #46 int
INFO  12:03:08,347 - #46 idx
INFO  12:03:08,347 - #23 )
INFO  12:03:08,347 - #24 {
INFO  12:03:08,347 - #46 neg
INFO  12:03:08,347 - #26 [
INFO  12:03:08,347 - #46 idx
INFO  12:03:08,348 - #27 ]
INFO  12:03:08,348 - #35 =
INFO  12:03:08,348 - #46 a
INFO  12:03:08,348 - #18 ;
INFO  12:03:08,348 - #25 }
INFO  12:03:08,348 - #46 int
INFO  12:03:08,348 - #46 getp
INFO  12:03:08,348 - #22 (
INFO  12:03:08,349 - #46 int
INFO  12:03:08,349 - #46 idx
INFO  12:03:08,349 - #23 )
INFO  12:03:08,349 - #24 {
INFO  12:03:08,349 - #4 return
INFO  12:03:08,349 - #46 pos
INFO  12:03:08,349 - #26 [
INFO  12:03:08,349 - #46 idx
INFO  12:03:08,349 - #27 ]
INFO  12:03:08,349 - #18 ;
INFO  12:03:08,349 - #25 }
INFO  12:03:08,349 - #46 int
INFO  12:03:08,349 - #46 getn
INFO  12:03:08,350 - #22 (
INFO  12:03:08,350 - #46 int
INFO  12:03:08,350 - #46 idx
INFO  12:03:08,350 - #23 )
INFO  12:03:08,350 - #24 {
INFO  12:03:08,350 - #4 return
INFO  12:03:08,350 - #46 neg
INFO  12:03:08,350 - #26 [
INFO  12:03:08,350 - #46 idx
INFO  12:03:08,350 - #27 ]
INFO  12:03:08,350 - #18 ;
INFO  12:03:08,350 - #25 }
INFO  12:03:08,351 - #25 }
INFO  12:03:08,351 - #25 }
INFO  12:03:08,351 - #46 Table
INFO  12:03:08,351 - #46 val
INFO  12:03:08,351 - #18 ;
INFO  12:03:08,351 - #46 Int
INFO  12:03:08,351 - #46 rows
INFO  12:03:08,352 - #20 ,
INFO  12:03:08,352 - #46 columns
INFO  12:03:08,352 - #18 ;
INFO  12:03:08,352 - #24 {
INFO  12:03:08,352 - #5 void
INFO  12:03:08,352 - #46 f
INFO  12:03:08,352 - #22 (
INFO  12:03:08,352 - #46 char
INFO  12:03:08,352 - #46 ch
INFO  12:03:08,352 - #20 ,
INFO  12:03:08,352 - #46 int
INFO  12:03:08,352 - #46 a
INFO  12:03:08,352 - #20 ,
INFO  12:03:08,352 - #46 int
INFO  12:03:08,353 - #46 arg
INFO  12:03:08,353 - #23 )
INFO  12:03:08,353 - #46 int
INFO  12:03:08,353 - #46 x
INFO  12:03:08,353 - #18 ;
INFO  12:03:08,353 - #24 {
INFO  12:03:08,353 - #46 x
INFO  12:03:08,353 - #35 =
INFO  12:03:08,353 - #46 arg
INFO  12:03:08,353 - #18 ;
INFO  12:03:08,354 - #25 }
INFO  12:03:08,354 - #5 void
INFO  12:03:08,354 - #46 main
INFO  12:03:08,354 - #22 (
INFO  12:03:08,354 - #23 )
INFO  12:03:08,355 - #46 int
INFO  12:03:08,355 - #46 x
INFO  12:03:08,355 - #20 ,
INFO  12:03:08,355 - #46 i
INFO  12:03:08,355 - #18 ;
INFO  12:03:08,356 - #46 char
INFO  12:03:08,356 - #46 c
INFO  12:03:08,356 - #18 ;
INFO  12:03:08,356 - #46 int
INFO  12:03:08,356 - #46 arr
INFO  12:03:08,356 - #26 [
INFO  12:03:08,356 - #27 ]
INFO  12:03:08,356 - #18 ;
INFO  12:03:08,356 - #24 {
INFO  12:03:08,356 - #46 val
INFO  12:03:08,356 - #35 =
INFO  12:03:08,356 - #12 new
INFO  12:03:08,356 - #46 Table
INFO  12:03:08,357 - #22 (
INFO  12:03:08,357 - #45 2
INFO  12:03:08,357 - #23 )
INFO  12:03:08,357 - #18 ;
INFO  12:03:08,357 - #46 arr
INFO  12:03:08,357 - #35 =
INFO  12:03:08,357 - #12 new
INFO  12:03:08,357 - #46 int
INFO  12:03:08,357 - #26 [
INFO  12:03:08,357 - #45 3
INFO  12:03:08,357 - #27 ]
INFO  12:03:08,358 - #18 ;
INFO  12:03:08,358 - #46 i
INFO  12:03:08,358 - #35 =
INFO  12:03:08,358 - #45 0
INFO  12:03:08,358 - #18 ;
INFO  12:03:08,358 - #11 while
INFO  12:03:08,358 - #22 (
INFO  12:03:08,358 - #46 i
INFO  12:03:08,358 - #32 <
INFO  12:03:08,358 - #45 3
INFO  12:03:08,359 - #23 )
INFO  12:03:08,359 - #24 {
INFO  12:03:08,359 - #46 arr
INFO  12:03:08,359 - #26 [
INFO  12:03:08,359 - #46 i
INFO  12:03:08,359 - #27 ]
INFO  12:03:08,359 - #35 =
INFO  12:03:08,359 - #46 i
INFO  12:03:08,359 - #18 ;
INFO  12:03:08,360 - #46 i
INFO  12:03:08,360 - #38 ++
INFO  12:03:08,360 - #18 ;
INFO  12:03:08,360 - #25 }
INFO  12:03:08,360 - #46 arr
INFO  12:03:08,360 - #21 .
INFO  12:03:08,360 - #17 foreach
INFO  12:03:08,360 - #22 (
INFO  12:03:08,360 - #46 x
INFO  12:03:08,360 - #34 =>
INFO  12:03:08,360 - #3 print
INFO  12:03:08,360 - #22 (
INFO  12:03:08,360 - #46 x
INFO  12:03:08,360 - #23 )
INFO  12:03:08,360 - #18 ;
INFO  12:03:08,360 - #23 )
INFO  12:03:08,361 - #18 ;
INFO  12:03:08,361 - #46 val
INFO  12:03:08,361 - #21 .
INFO  12:03:08,361 - #46 pos
INFO  12:03:08,361 - #35 =
INFO  12:03:08,361 - #12 new
INFO  12:03:08,361 - #46 int
INFO  12:03:08,361 - #26 [
INFO  12:03:08,361 - #46 size
INFO  12:03:08,361 - #27 ]
INFO  12:03:08,361 - #18 ;
INFO  12:03:08,361 - #46 val
INFO  12:03:08,361 - #21 .
INFO  12:03:08,361 - #46 neg
INFO  12:03:08,361 - #35 =
INFO  12:03:08,361 - #12 new
INFO  12:03:08,361 - #46 int
INFO  12:03:08,361 - #26 [
INFO  12:03:08,362 - #46 size
INFO  12:03:08,362 - #27 ]
INFO  12:03:08,362 - #18 ;
INFO  12:03:08,362 - #13 read
INFO  12:03:08,362 - #22 (
INFO  12:03:08,362 - #46 x
INFO  12:03:08,362 - #23 )
INFO  12:03:08,362 - #18 ;
INFO  12:03:08,362 - #26 [
INFO  12:03:08,362 - #46 i
INFO  12:03:08,362 - #20 ,
INFO  12:03:08,362 - #46 x
INFO  12:03:08,364 - #27 ]
INFO  12:03:08,365 - #35 =
INFO  12:03:08,365 - #46 arr
INFO  12:03:08,365 - #18 ;
INFO  12:03:08,365 - #11 while
INFO  12:03:08,365 - #22 (
INFO  12:03:08,365 - #46 i
INFO  12:03:08,365 - #32 <
INFO  12:03:08,365 - #46 size
INFO  12:03:08,365 - #23 )
INFO  12:03:08,365 - #24 {
INFO  12:03:08,365 - #46 val
INFO  12:03:08,365 - #21 .
INFO  12:03:08,366 - #46 putp
INFO  12:03:08,366 - #22 (
INFO  12:03:08,366 - #45 0
INFO  12:03:08,366 - #20 ,
INFO  12:03:08,366 - #46 i
INFO  12:03:08,366 - #23 )
INFO  12:03:08,366 - #18 ;
INFO  12:03:08,366 - #46 val
INFO  12:03:08,366 - #21 .
INFO  12:03:08,366 - #46 putn
INFO  12:03:08,366 - #22 (
INFO  12:03:08,367 - #45 0
INFO  12:03:08,367 - #20 ,
INFO  12:03:08,367 - #46 i
INFO  12:03:08,367 - #23 )
INFO  12:03:08,367 - #18 ;
INFO  12:03:08,367 - #46 i
INFO  12:03:08,367 - #38 ++
INFO  12:03:08,367 - #18 ;
INFO  12:03:08,367 - #25 }
INFO  12:03:08,368 - #46 f
INFO  12:03:08,368 - #22 (
INFO  12:03:08,368 - #46 c
INFO  12:03:08,368 - #20 ,
INFO  12:03:08,368 - #46 x
INFO  12:03:08,368 - #20 ,
INFO  12:03:08,368 - #46 i
INFO  12:03:08,368 - #23 )
INFO  12:03:08,368 - #18 ;
INFO  12:03:08,368 - #13 read
INFO  12:03:08,368 - #22 (
INFO  12:03:08,368 - #46 rows
INFO  12:03:08,368 - #23 )
INFO  12:03:08,368 - #18 ;
INFO  12:03:08,368 - #46 x
INFO  12:03:08,368 - #35 =
INFO  12:03:08,368 - #46 rows
INFO  12:03:08,368 - #18 ;
INFO  12:03:08,368 - #11 while
INFO  12:03:08,368 - #22 (
INFO  12:03:08,369 - #50 true
ERROR 12:03:08,369 - 
Sintaksna greska na liniji 43
ERROR 12:03:08,369 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 43
