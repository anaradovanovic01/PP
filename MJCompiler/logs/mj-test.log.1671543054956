INFO  20:21:04,957 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:21:04,961 - #2 program
INFO  20:21:04,961 - #15 p
INFO  20:21:04,961 - #21 const
INFO  20:21:04,961 - #15 int
INFO  20:21:04,961 - #15 size
INFO  20:21:04,962 - #12 =
INFO  20:21:04,962 - #14 10
INFO  20:21:04,962 - #5 ;
INFO  20:21:04,962 - #19 class
INFO  20:21:04,962 - #15 Table
INFO  20:21:04,962 - #3 {
INFO  20:21:04,962 - #15 int
INFO  20:21:04,962 - #15 pos
INFO  20:21:04,962 - #47 [
INFO  20:21:04,962 - #48 ]
INFO  20:21:04,963 - #8 ,
INFO  20:21:04,963 - #15 neg
INFO  20:21:04,963 - #47 [
INFO  20:21:04,963 - #48 ]
INFO  20:21:04,963 - #8 ,
INFO  20:21:04,963 - #15 factor
INFO  20:21:04,963 - #5 ;
INFO  20:21:04,964 - #3 {
INFO  20:21:04,964 - #15 Table
INFO  20:21:04,964 - #6 (
INFO  20:21:04,964 - #15 int
INFO  20:21:04,964 - #15 factor
INFO  20:21:04,964 - #7 )
INFO  20:21:04,964 - #3 {
INFO  20:21:04,964 - #28 this
INFO  20:21:04,964 - #46 .
INFO  20:21:04,964 - #15 factor
INFO  20:21:04,964 - #12 =
INFO  20:21:04,964 - #15 factor
INFO  20:21:04,964 - #5 ;
INFO  20:21:04,964 - #4 }
INFO  20:21:04,964 - #13 void
INFO  20:21:04,965 - #15 putp
INFO  20:21:04,965 - #6 (
INFO  20:21:04,965 - #15 int
INFO  20:21:04,965 - #15 a
INFO  20:21:04,965 - #8 ,
INFO  20:21:04,965 - #15 int
INFO  20:21:04,965 - #15 idx
INFO  20:21:04,965 - #7 )
INFO  20:21:04,965 - #3 {
INFO  20:21:04,965 - #28 this
INFO  20:21:04,965 - #46 .
INFO  20:21:04,965 - #15 pos
INFO  20:21:04,965 - #47 [
INFO  20:21:04,965 - #15 idx
INFO  20:21:04,965 - #48 ]
INFO  20:21:04,965 - #12 =
INFO  20:21:04,965 - #15 a
INFO  20:21:04,966 - #5 ;
INFO  20:21:04,966 - #4 }
INFO  20:21:04,966 - #13 void
INFO  20:21:04,966 - #15 putn
INFO  20:21:04,966 - #6 (
INFO  20:21:04,966 - #15 int
INFO  20:21:04,966 - #15 a
INFO  20:21:04,966 - #8 ,
INFO  20:21:04,966 - #15 int
INFO  20:21:04,966 - #15 idx
INFO  20:21:04,966 - #7 )
INFO  20:21:04,966 - #3 {
INFO  20:21:04,967 - #28 this
INFO  20:21:04,967 - #46 .
INFO  20:21:04,967 - #15 neg
INFO  20:21:04,967 - #47 [
INFO  20:21:04,967 - #15 idx
INFO  20:21:04,967 - #48 ]
INFO  20:21:04,967 - #12 =
INFO  20:21:04,967 - #15 a
INFO  20:21:04,967 - #5 ;
INFO  20:21:04,967 - #4 }
INFO  20:21:04,967 - #15 int
INFO  20:21:04,967 - #15 getp
INFO  20:21:04,967 - #6 (
INFO  20:21:04,967 - #15 int
INFO  20:21:04,967 - #15 idx
INFO  20:21:04,967 - #7 )
INFO  20:21:04,968 - #3 {
INFO  20:21:04,968 - #10 return
INFO  20:21:04,968 - #15 pos
INFO  20:21:04,968 - #47 [
INFO  20:21:04,968 - #15 idx
INFO  20:21:04,968 - #48 ]
INFO  20:21:04,968 - #5 ;
INFO  20:21:04,968 - #4 }
INFO  20:21:04,968 - #15 int
INFO  20:21:04,968 - #15 getn
INFO  20:21:04,968 - #6 (
INFO  20:21:04,968 - #15 int
INFO  20:21:04,968 - #15 idx
INFO  20:21:04,968 - #7 )
INFO  20:21:04,968 - #3 {
INFO  20:21:04,968 - #10 return
INFO  20:21:04,969 - #15 neg
INFO  20:21:04,969 - #47 [
INFO  20:21:04,969 - #15 idx
INFO  20:21:04,969 - #48 ]
INFO  20:21:04,969 - #5 ;
INFO  20:21:04,969 - #4 }
INFO  20:21:04,969 - #4 }
INFO  20:21:04,969 - #4 }
INFO  20:21:04,969 - #15 Table
INFO  20:21:04,969 - #15 val
INFO  20:21:04,969 - #5 ;
INFO  20:21:04,969 - #15 Int
INFO  20:21:04,969 - #15 rows
INFO  20:21:04,969 - #8 ,
INFO  20:21:04,969 - #15 columns
INFO  20:21:04,969 - #5 ;
INFO  20:21:04,969 - #3 {
INFO  20:21:04,969 - #13 void
INFO  20:21:04,970 - #15 f
INFO  20:21:04,970 - #6 (
INFO  20:21:04,970 - #15 char
INFO  20:21:04,970 - #15 ch
INFO  20:21:04,970 - #8 ,
INFO  20:21:04,970 - #15 int
INFO  20:21:04,970 - #15 a
INFO  20:21:04,970 - #8 ,
INFO  20:21:04,970 - #15 int
INFO  20:21:04,970 - #15 arg
INFO  20:21:04,970 - #7 )
INFO  20:21:04,970 - #15 int
INFO  20:21:04,970 - #15 x
INFO  20:21:04,970 - #5 ;
INFO  20:21:04,970 - #3 {
INFO  20:21:04,970 - #15 x
INFO  20:21:04,970 - #12 =
INFO  20:21:04,971 - #15 arg
INFO  20:21:04,971 - #5 ;
INFO  20:21:04,971 - #4 }
INFO  20:21:04,971 - #13 void
INFO  20:21:04,971 - #15 main
INFO  20:21:04,971 - #6 (
INFO  20:21:04,971 - #7 )
INFO  20:21:04,971 - #15 int
INFO  20:21:04,971 - #15 x
INFO  20:21:04,971 - #8 ,
INFO  20:21:04,971 - #15 i
INFO  20:21:04,971 - #5 ;
INFO  20:21:04,971 - #15 char
INFO  20:21:04,971 - #15 c
INFO  20:21:04,971 - #8 ,
INFO  20:21:04,971 - #15 int
INFO  20:21:04,971 - #47 [
INFO  20:21:04,971 - #48 ]
INFO  20:21:04,971 - #15 arr
INFO  20:21:04,972 - #5 ;
INFO  20:21:04,972 - #3 {
INFO  20:21:04,972 - #15 val
INFO  20:21:04,972 - #12 =
INFO  20:21:04,972 - #24 new
INFO  20:21:04,972 - #15 Table
INFO  20:21:04,972 - #6 (
INFO  20:21:04,972 - #14 2
INFO  20:21:04,972 - #7 )
INFO  20:21:04,972 - #5 ;
INFO  20:21:04,972 - #15 arr
INFO  20:21:04,972 - #12 =
INFO  20:21:04,973 - #24 new
INFO  20:21:04,973 - #15 int
INFO  20:21:04,974 - #47 [
INFO  20:21:04,974 - #14 3
INFO  20:21:04,974 - #48 ]
INFO  20:21:04,974 - #5 ;
INFO  20:21:04,974 - #15 i
INFO  20:21:04,974 - #12 =
INFO  20:21:04,974 - #14 0
INFO  20:21:04,974 - #5 ;
INFO  20:21:04,974 - #23 while
INFO  20:21:04,974 - #6 (
INFO  20:21:04,974 - #15 i
INFO  20:21:04,974 - #39 <
INFO  20:21:04,974 - #14 3
INFO  20:21:04,974 - #7 )
INFO  20:21:04,974 - #3 {
INFO  20:21:04,974 - #15 arr
INFO  20:21:04,974 - #47 [
INFO  20:21:04,974 - #15 i
INFO  20:21:04,974 - #48 ]
INFO  20:21:04,975 - #12 =
INFO  20:21:04,975 - #15 i
INFO  20:21:04,975 - #5 ;
INFO  20:21:04,975 - #15 i
INFO  20:21:04,975 - #43 ++
INFO  20:21:04,975 - #5 ;
INFO  20:21:04,975 - #4 }
INFO  20:21:04,975 - #15 arr
INFO  20:21:04,975 - #46 .
INFO  20:21:04,975 - #29 foreach
INFO  20:21:04,975 - #6 (
INFO  20:21:04,975 - #15 x
INFO  20:21:04,975 - #34 =>
INFO  20:21:04,975 - #9 print
INFO  20:21:04,975 - #6 (
INFO  20:21:04,975 - #15 x
INFO  20:21:04,975 - #7 )
INFO  20:21:04,975 - #5 ;
INFO  20:21:04,975 - #7 )
INFO  20:21:04,975 - #5 ;
INFO  20:21:04,975 - #15 val
INFO  20:21:04,975 - #46 .
INFO  20:21:04,975 - #15 pos
INFO  20:21:04,975 - #12 =
INFO  20:21:04,975 - #24 new
INFO  20:21:04,975 - #15 int
INFO  20:21:04,976 - #47 [
INFO  20:21:04,976 - #15 size
INFO  20:21:04,976 - #48 ]
INFO  20:21:04,976 - #5 ;
INFO  20:21:04,976 - #15 val
INFO  20:21:04,976 - #46 .
INFO  20:21:04,976 - #15 neg
INFO  20:21:04,976 - #12 =
INFO  20:21:04,976 - #24 new
INFO  20:21:04,976 - #15 int
INFO  20:21:04,976 - #47 [
INFO  20:21:04,976 - #15 size
INFO  20:21:04,976 - #48 ]
INFO  20:21:04,976 - #5 ;
INFO  20:21:04,976 - #25 read
INFO  20:21:04,976 - #6 (
INFO  20:21:04,976 - #15 x
INFO  20:21:04,976 - #7 )
INFO  20:21:04,976 - #5 ;
INFO  20:21:04,976 - #47 [
INFO  20:21:04,976 - #15 i
INFO  20:21:04,976 - #8 ,
INFO  20:21:04,976 - #8 ,
INFO  20:21:04,976 - #15 x
INFO  20:21:04,976 - #48 ]
INFO  20:21:04,976 - #12 =
INFO  20:21:04,976 - #15 arr
INFO  20:21:04,976 - #5 ;
INFO  20:21:04,977 - #23 while
INFO  20:21:04,977 - #6 (
INFO  20:21:04,977 - #15 i
INFO  20:21:04,977 - #39 <
INFO  20:21:04,977 - #15 size
INFO  20:21:04,977 - #7 )
INFO  20:21:04,977 - #3 {
INFO  20:21:04,977 - #15 val
INFO  20:21:04,977 - #46 .
INFO  20:21:04,977 - #15 putp
INFO  20:21:04,977 - #6 (
INFO  20:21:04,977 - #14 0
INFO  20:21:04,977 - #8 ,
INFO  20:21:04,977 - #15 i
INFO  20:21:04,977 - #7 )
INFO  20:21:04,977 - #5 ;
INFO  20:21:04,978 - #15 val
INFO  20:21:04,978 - #46 .
INFO  20:21:04,978 - #15 putn
INFO  20:21:04,978 - #6 (
INFO  20:21:04,978 - #14 0
INFO  20:21:04,978 - #8 ,
INFO  20:21:04,978 - #15 i
INFO  20:21:04,978 - #7 )
INFO  20:21:04,978 - #5 ;
INFO  20:21:04,978 - #15 i
INFO  20:21:04,978 - #43 ++
INFO  20:21:04,978 - #5 ;
INFO  20:21:04,978 - #4 }
INFO  20:21:04,978 - #15 f
INFO  20:21:04,978 - #6 (
INFO  20:21:04,978 - #15 c
INFO  20:21:04,978 - #8 ,
INFO  20:21:04,978 - #15 x
INFO  20:21:04,978 - #8 ,
INFO  20:21:04,978 - #15 i
INFO  20:21:04,978 - #7 )
INFO  20:21:04,978 - #5 ;
INFO  20:21:04,979 - #25 read
INFO  20:21:04,979 - #6 (
INFO  20:21:04,979 - #15 rows
INFO  20:21:04,979 - #7 )
INFO  20:21:04,979 - #5 ;
INFO  20:21:04,979 - #15 x
INFO  20:21:04,979 - #12 =
INFO  20:21:04,979 - #15 rows
INFO  20:21:04,979 - #5 ;
INFO  20:21:04,979 - #23 while
INFO  20:21:04,979 - #6 (
INFO  20:21:04,979 - #50 true
INFO  20:21:04,979 - #7 )
INFO  20:21:04,979 - #3 {
INFO  20:21:04,979 - #16 if
INFO  20:21:04,979 - #6 (
INFO  20:21:04,979 - #15 x
INFO  20:21:04,979 - #40 <=
INFO  20:21:04,980 - #14 0
INFO  20:21:04,980 - #7 )
INFO  20:21:04,980 - #18 break
INFO  20:21:04,980 - #5 ;
INFO  20:21:04,980 - #16 if
INFO  20:21:04,980 - #6 (
INFO  20:21:04,980 - #14 0
INFO  20:21:04,980 - #40 <=
INFO  20:21:04,980 - #15 x
INFO  20:21:04,980 - #42 &&
INFO  20:21:04,980 - #15 x
INFO  20:21:04,980 - #39 <
INFO  20:21:04,980 - #15 size
INFO  20:21:04,980 - #7 )
INFO  20:21:04,980 - #3 {
INFO  20:21:04,980 - #15 val
INFO  20:21:04,980 - #46 .
INFO  20:21:04,980 - #15 putp
INFO  20:21:04,980 - #6 (
INFO  20:21:04,980 - #15 val
INFO  20:21:04,980 - #46 .
INFO  20:21:04,980 - #15 getp
INFO  20:21:04,980 - #6 (
INFO  20:21:04,980 - #15 x
INFO  20:21:04,980 - #7 )
INFO  20:21:04,980 - #11 +
INFO  20:21:04,980 - #14 1
INFO  20:21:04,980 - #7 )
INFO  20:21:04,980 - #5 ;
INFO  20:21:04,980 - #4 }
INFO  20:21:04,980 - #17 else
INFO  20:21:04,980 - #16 if
INFO  20:21:04,981 - #6 (
INFO  20:21:04,981 - #30 -
INFO  20:21:04,981 - #15 size
INFO  20:21:04,981 - #39 <
INFO  20:21:04,981 - #15 x
INFO  20:21:04,981 - #42 &&
INFO  20:21:04,981 - #15 x
INFO  20:21:04,981 - #39 <
INFO  20:21:04,981 - #14 0
INFO  20:21:04,981 - #7 )
INFO  20:21:04,981 - #3 {
INFO  20:21:04,981 - #15 val
INFO  20:21:04,981 - #46 .
INFO  20:21:04,981 - #15 putn
INFO  20:21:04,981 - #6 (
INFO  20:21:04,981 - #15 val
INFO  20:21:04,981 - #46 .
INFO  20:21:04,981 - #15 getn
INFO  20:21:04,981 - #6 (
INFO  20:21:04,981 - #30 -
INFO  20:21:04,981 - #15 x
INFO  20:21:04,981 - #7 )
INFO  20:21:04,981 - #11 +
INFO  20:21:04,981 - #14 1
INFO  20:21:04,981 - #7 )
INFO  20:21:04,981 - #5 ;
INFO  20:21:04,981 - #4 }
INFO  20:21:04,981 - #25 read
INFO  20:21:04,981 - #6 (
INFO  20:21:04,981 - #15 x
INFO  20:21:04,981 - #7 )
INFO  20:21:04,981 - #5 ;
INFO  20:21:04,981 - #4 }
INFO  20:21:04,981 - #4 }
INFO  20:21:04,981 - #4 }
