INFO  20:27:44,887 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:27:44,928 - #2 program
INFO  20:27:44,928 - #48 p
INFO  20:27:44,928 - #9 const
INFO  20:27:44,930 - #48 int
INFO  20:27:44,930 - #48 size
INFO  20:27:44,930 - #35 =
INFO  20:27:44,931 - #45 10
INFO  20:27:44,931 - #18 ;
INFO  20:27:44,931 - #7 class
INFO  20:27:44,932 - #48 Table
INFO  20:27:44,932 - #24 {
INFO  20:27:44,933 - #48 int
INFO  20:27:44,933 - #48 pos
INFO  20:27:44,933 - #26 [
INFO  20:27:44,933 - #27 ]
INFO  20:27:44,933 - #20 ,
INFO  20:27:44,933 - #48 neg
INFO  20:27:44,933 - #26 [
INFO  20:27:44,933 - #27 ]
INFO  20:27:44,933 - #20 ,
INFO  20:27:44,934 - #48 factor
INFO  20:27:44,934 - #18 ;
INFO  20:27:44,934 - #24 {
INFO  20:27:44,935 - #48 Table
INFO  20:27:44,935 - #22 (
INFO  20:27:44,935 - #48 int
INFO  20:27:44,935 - #48 factor
INFO  20:27:44,935 - #23 )
INFO  20:27:44,935 - #24 {
INFO  20:27:44,935 - #48 factor
INFO  20:27:44,936 - #35 =
INFO  20:27:44,936 - #48 factor
INFO  20:27:44,937 - #18 ;
INFO  20:27:44,937 - #25 }
INFO  20:27:44,937 - #5 void
INFO  20:27:44,938 - #48 putp
INFO  20:27:44,938 - #22 (
INFO  20:27:44,939 - #48 int
INFO  20:27:44,939 - #48 a
INFO  20:27:44,939 - #20 ,
INFO  20:27:44,939 - #48 int
INFO  20:27:44,939 - #48 idx
INFO  20:27:44,939 - #23 )
INFO  20:27:44,940 - #24 {
INFO  20:27:44,940 - #48 pos
INFO  20:27:44,940 - #26 [
INFO  20:27:44,940 - #48 idx
INFO  20:27:44,940 - #27 ]
INFO  20:27:44,940 - #35 =
INFO  20:27:44,941 - #48 a
INFO  20:27:44,941 - #18 ;
INFO  20:27:44,941 - #25 }
INFO  20:27:44,941 - #5 void
INFO  20:27:44,943 - #48 putn
INFO  20:27:44,943 - #22 (
INFO  20:27:44,943 - #48 int
INFO  20:27:44,943 - #48 a
INFO  20:27:44,943 - #20 ,
INFO  20:27:44,943 - #48 int
INFO  20:27:44,943 - #48 idx
INFO  20:27:44,943 - #23 )
INFO  20:27:44,944 - #24 {
INFO  20:27:44,944 - #48 neg
INFO  20:27:44,944 - #26 [
INFO  20:27:44,944 - #48 idx
INFO  20:27:44,944 - #27 ]
INFO  20:27:44,944 - #35 =
INFO  20:27:44,945 - #48 a
INFO  20:27:44,945 - #18 ;
INFO  20:27:44,945 - #25 }
INFO  20:27:44,945 - #48 int
INFO  20:27:44,947 - #48 getp
INFO  20:27:44,947 - #22 (
INFO  20:27:44,947 - #48 int
INFO  20:27:44,947 - #48 idx
INFO  20:27:44,947 - #23 )
INFO  20:27:44,948 - #24 {
INFO  20:27:44,948 - #4 return
INFO  20:27:44,948 - #48 pos
INFO  20:27:44,948 - #26 [
INFO  20:27:44,948 - #48 idx
INFO  20:27:44,948 - #27 ]
INFO  20:27:44,949 - #18 ;
INFO  20:27:44,949 - #25 }
INFO  20:27:44,949 - #48 int
INFO  20:27:44,949 - #48 getn
INFO  20:27:44,950 - #22 (
INFO  20:27:44,950 - #48 int
INFO  20:27:44,950 - #48 idx
INFO  20:27:44,950 - #23 )
INFO  20:27:44,950 - #24 {
INFO  20:27:44,950 - #4 return
INFO  20:27:44,951 - #48 neg
INFO  20:27:44,951 - #26 [
INFO  20:27:44,951 - #48 idx
INFO  20:27:44,951 - #27 ]
INFO  20:27:44,951 - #18 ;
INFO  20:27:44,952 - #25 }
INFO  20:27:44,952 - #25 }
INFO  20:27:44,952 - #25 }
INFO  20:27:44,952 - #48 Table
INFO  20:27:44,952 - #48 val
INFO  20:27:44,953 - #18 ;
INFO  20:27:44,953 - #48 Int
INFO  20:27:44,953 - #48 rows
INFO  20:27:44,953 - #20 ,
INFO  20:27:44,953 - #48 columns
INFO  20:27:44,953 - #18 ;
INFO  20:27:44,953 - #24 {
INFO  20:27:44,953 - #5 void
INFO  20:27:44,953 - #48 f
INFO  20:27:44,953 - #22 (
INFO  20:27:44,953 - #48 char
INFO  20:27:44,953 - #48 ch
INFO  20:27:44,953 - #20 ,
INFO  20:27:44,953 - #48 int
INFO  20:27:44,953 - #48 a
INFO  20:27:44,954 - #20 ,
INFO  20:27:44,954 - #48 int
INFO  20:27:44,954 - #48 arg
INFO  20:27:44,954 - #23 )
INFO  20:27:44,954 - #48 int
INFO  20:27:44,954 - #48 x
INFO  20:27:44,954 - #18 ;
INFO  20:27:44,954 - #24 {
INFO  20:27:44,955 - #48 x
INFO  20:27:44,955 - #35 =
INFO  20:27:44,955 - #48 arg
INFO  20:27:44,955 - #18 ;
INFO  20:27:44,955 - #25 }
INFO  20:27:44,955 - #5 void
INFO  20:27:44,955 - #48 main
INFO  20:27:44,955 - #22 (
INFO  20:27:44,955 - #23 )
INFO  20:27:44,956 - #48 int
INFO  20:27:44,956 - #48 x
INFO  20:27:44,956 - #20 ,
INFO  20:27:44,956 - #48 i
INFO  20:27:44,956 - #18 ;
INFO  20:27:44,956 - #48 char
INFO  20:27:44,956 - #48 c
INFO  20:27:44,956 - #18 ;
INFO  20:27:44,956 - #48 int
INFO  20:27:44,956 - #48 arr
INFO  20:27:44,956 - #26 [
INFO  20:27:44,956 - #27 ]
INFO  20:27:44,956 - #18 ;
INFO  20:27:44,956 - #24 {
INFO  20:27:44,956 - #48 val
INFO  20:27:44,956 - #35 =
INFO  20:27:44,956 - #12 new
INFO  20:27:44,956 - #48 Table
INFO  20:27:44,956 - #22 (
INFO  20:27:44,957 - #45 2
INFO  20:27:44,957 - #23 )
INFO  20:27:44,957 - #18 ;
INFO  20:27:44,957 - #48 arr
INFO  20:27:44,957 - #35 =
INFO  20:27:44,957 - #12 new
INFO  20:27:44,957 - #48 int
INFO  20:27:44,957 - #26 [
INFO  20:27:44,957 - #45 3
INFO  20:27:44,957 - #27 ]
INFO  20:27:44,957 - #18 ;
INFO  20:27:44,959 - #48 i
INFO  20:27:44,959 - #35 =
INFO  20:27:44,959 - #45 0
INFO  20:27:44,959 - #18 ;
INFO  20:27:44,959 - #11 while
INFO  20:27:44,959 - #22 (
INFO  20:27:44,959 - #48 i
INFO  20:27:44,959 - #32 <
INFO  20:27:44,959 - #45 3
INFO  20:27:44,960 - #23 )
INFO  20:27:44,960 - #24 {
INFO  20:27:44,960 - #48 arr
INFO  20:27:44,960 - #26 [
INFO  20:27:44,960 - #48 i
INFO  20:27:44,960 - #27 ]
INFO  20:27:44,960 - #35 =
INFO  20:27:44,961 - #48 i
INFO  20:27:44,961 - #18 ;
INFO  20:27:44,961 - #48 i
INFO  20:27:44,961 - #38 ++
INFO  20:27:44,961 - #18 ;
INFO  20:27:44,961 - #25 }
INFO  20:27:44,961 - #48 arr
INFO  20:27:44,961 - #21 .
INFO  20:27:44,961 - #17 foreach
INFO  20:27:44,961 - #22 (
INFO  20:27:44,961 - #48 x
INFO  20:27:44,961 - #34 =>
INFO  20:27:44,961 - #3 print
INFO  20:27:44,961 - #22 (
INFO  20:27:44,961 - #48 x
INFO  20:27:44,961 - #23 )
INFO  20:27:44,962 - #18 ;
INFO  20:27:44,962 - #23 )
INFO  20:27:44,962 - #18 ;
INFO  20:27:44,962 - #48 val
INFO  20:27:44,962 - #21 .
INFO  20:27:44,962 - #48 pos
INFO  20:27:44,962 - #35 =
INFO  20:27:44,962 - #12 new
INFO  20:27:44,962 - #48 int
INFO  20:27:44,962 - #26 [
INFO  20:27:44,962 - #48 size
INFO  20:27:44,962 - #27 ]
INFO  20:27:44,962 - #18 ;
INFO  20:27:44,962 - #48 val
INFO  20:27:44,962 - #21 .
INFO  20:27:44,962 - #48 neg
INFO  20:27:44,962 - #35 =
INFO  20:27:44,963 - #12 new
INFO  20:27:44,963 - #48 int
INFO  20:27:44,963 - #26 [
INFO  20:27:44,963 - #48 size
INFO  20:27:44,963 - #27 ]
INFO  20:27:44,963 - #18 ;
INFO  20:27:44,963 - #13 read
INFO  20:27:44,963 - #22 (
INFO  20:27:44,963 - #48 x
INFO  20:27:44,963 - #23 )
INFO  20:27:44,963 - #18 ;
INFO  20:27:44,963 - #26 [
INFO  20:27:44,963 - #48 i
INFO  20:27:44,963 - #20 ,
INFO  20:27:44,963 - #48 x
INFO  20:27:44,963 - #27 ]
INFO  20:27:44,964 - #35 =
INFO  20:27:44,964 - #48 arr
INFO  20:27:44,964 - #18 ;
INFO  20:27:44,964 - #11 while
INFO  20:27:44,964 - #22 (
INFO  20:27:44,964 - #48 i
INFO  20:27:44,964 - #32 <
INFO  20:27:44,964 - #48 size
INFO  20:27:44,964 - #23 )
INFO  20:27:44,964 - #24 {
INFO  20:27:44,964 - #48 val
INFO  20:27:44,964 - #21 .
INFO  20:27:44,965 - #48 putp
INFO  20:27:44,965 - #22 (
INFO  20:27:44,965 - #45 0
INFO  20:27:44,965 - #20 ,
INFO  20:27:44,965 - #48 i
INFO  20:27:44,965 - #23 )
INFO  20:27:44,966 - #18 ;
INFO  20:27:44,966 - #48 val
INFO  20:27:44,966 - #21 .
INFO  20:27:44,966 - #48 putn
INFO  20:27:44,966 - #22 (
INFO  20:27:44,966 - #45 0
INFO  20:27:44,966 - #20 ,
INFO  20:27:44,966 - #48 i
INFO  20:27:44,967 - #23 )
INFO  20:27:44,968 - #18 ;
INFO  20:27:44,968 - #48 i
INFO  20:27:44,968 - #38 ++
INFO  20:27:44,968 - #18 ;
INFO  20:27:44,968 - #25 }
INFO  20:27:44,968 - #48 f
INFO  20:27:44,968 - #22 (
INFO  20:27:44,968 - #48 c
INFO  20:27:44,968 - #20 ,
INFO  20:27:44,968 - #48 x
INFO  20:27:44,968 - #20 ,
INFO  20:27:44,968 - #48 i
INFO  20:27:44,968 - #23 )
INFO  20:27:44,968 - #18 ;
INFO  20:27:44,968 - #13 read
INFO  20:27:44,968 - #22 (
INFO  20:27:44,969 - #48 rows
INFO  20:27:44,969 - #23 )
INFO  20:27:44,969 - #18 ;
INFO  20:27:44,969 - #48 x
INFO  20:27:44,969 - #35 =
INFO  20:27:44,969 - #48 rows
INFO  20:27:44,969 - #18 ;
INFO  20:27:44,969 - #11 while
INFO  20:27:44,969 - #22 (
INFO  20:27:44,969 - #46 true
INFO  20:27:44,969 - #23 )
