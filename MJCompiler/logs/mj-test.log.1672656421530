INFO  11:39:30,668 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:39:30,776 - #2 program
INFO  11:39:30,776 - #46 p
INFO  11:39:30,776 - #9 const
INFO  11:39:30,778 - #46 int
INFO  11:39:30,779 - #46 size
INFO  11:39:30,780 - #35 =
INFO  11:39:30,780 - #45 10
INFO  11:39:30,780 - #18 ;
INFO  11:39:30,781 - #7 class
INFO  11:39:30,782 - #46 Table
INFO  11:39:30,782 - #24 {
INFO  11:39:30,783 - #46 int
INFO  11:39:30,784 - #46 pos
INFO  11:39:30,784 - #26 [
INFO  11:39:30,784 - #27 ]
INFO  11:39:30,784 - #20 ,
INFO  11:39:30,784 - #46 neg
INFO  11:39:30,784 - #26 [
INFO  11:39:30,785 - #27 ]
INFO  11:39:30,785 - #20 ,
INFO  11:39:30,786 - #46 factor
INFO  11:39:30,786 - #18 ;
INFO  11:39:30,786 - #24 {
INFO  11:39:30,787 - #46 Table
INFO  11:39:30,788 - #22 (
INFO  11:39:30,788 - #46 int
INFO  11:39:30,788 - #46 factor
INFO  11:39:30,788 - #23 )
INFO  11:39:30,789 - #24 {
INFO  11:39:30,789 - #46 factor
INFO  11:39:30,790 - #35 =
INFO  11:39:30,790 - #46 factor
INFO  11:39:30,791 - #18 ;
INFO  11:39:30,791 - #25 }
INFO  11:39:30,792 - #5 void
INFO  11:39:30,793 - #46 putp
INFO  11:39:30,793 - #22 (
INFO  11:39:30,794 - #46 int
INFO  11:39:30,794 - #46 a
INFO  11:39:30,794 - #20 ,
INFO  11:39:30,794 - #46 int
INFO  11:39:30,794 - #46 idx
INFO  11:39:30,794 - #23 )
INFO  11:39:30,794 - #24 {
INFO  11:39:30,794 - #46 pos
INFO  11:39:30,795 - #26 [
INFO  11:39:30,795 - #46 idx
INFO  11:39:30,795 - #27 ]
INFO  11:39:30,795 - #35 =
INFO  11:39:30,795 - #46 a
INFO  11:39:30,795 - #18 ;
INFO  11:39:30,795 - #25 }
INFO  11:39:30,796 - #5 void
INFO  11:39:30,796 - #46 putn
INFO  11:39:30,797 - #22 (
INFO  11:39:30,797 - #46 int
INFO  11:39:30,797 - #46 a
INFO  11:39:30,797 - #20 ,
INFO  11:39:30,797 - #46 int
INFO  11:39:30,797 - #46 idx
INFO  11:39:30,797 - #23 )
INFO  11:39:30,797 - #24 {
INFO  11:39:30,797 - #46 neg
INFO  11:39:30,798 - #26 [
INFO  11:39:30,798 - #46 idx
INFO  11:39:30,798 - #27 ]
INFO  11:39:30,798 - #35 =
INFO  11:39:30,798 - #46 a
INFO  11:39:30,798 - #18 ;
INFO  11:39:30,798 - #25 }
INFO  11:39:30,798 - #46 int
INFO  11:39:30,799 - #46 getp
INFO  11:39:30,799 - #22 (
INFO  11:39:30,799 - #46 int
INFO  11:39:30,799 - #46 idx
INFO  11:39:30,799 - #23 )
INFO  11:39:30,799 - #24 {
INFO  11:39:30,799 - #4 return
INFO  11:39:30,799 - #46 pos
INFO  11:39:30,799 - #26 [
INFO  11:39:30,800 - #46 idx
INFO  11:39:30,800 - #27 ]
INFO  11:39:30,800 - #18 ;
INFO  11:39:30,800 - #25 }
INFO  11:39:30,800 - #46 int
INFO  11:39:30,800 - #46 getn
INFO  11:39:30,800 - #22 (
INFO  11:39:30,800 - #46 int
INFO  11:39:30,801 - #46 idx
INFO  11:39:30,801 - #23 )
INFO  11:39:30,801 - #24 {
INFO  11:39:30,801 - #4 return
INFO  11:39:30,801 - #46 neg
INFO  11:39:30,801 - #26 [
INFO  11:39:30,801 - #46 idx
INFO  11:39:30,801 - #27 ]
INFO  11:39:30,801 - #18 ;
INFO  11:39:30,801 - #25 }
INFO  11:39:30,801 - #25 }
INFO  11:39:30,802 - #25 }
INFO  11:39:30,802 - #46 Table
INFO  11:39:30,802 - #46 val
INFO  11:39:30,802 - #18 ;
INFO  11:39:30,802 - #46 Int
INFO  11:39:30,802 - #46 rows
INFO  11:39:30,803 - #20 ,
INFO  11:39:30,803 - #46 columns
INFO  11:39:30,803 - #18 ;
INFO  11:39:30,803 - #24 {
INFO  11:39:30,803 - #5 void
INFO  11:39:30,803 - #46 f
INFO  11:39:30,803 - #22 (
INFO  11:39:30,803 - #46 char
INFO  11:39:30,803 - #46 ch
INFO  11:39:30,803 - #20 ,
INFO  11:39:30,803 - #46 int
INFO  11:39:30,804 - #46 a
INFO  11:39:30,804 - #20 ,
INFO  11:39:30,804 - #46 int
INFO  11:39:30,804 - #46 arg
INFO  11:39:30,804 - #23 )
INFO  11:39:30,804 - #46 int
INFO  11:39:30,804 - #46 x
INFO  11:39:30,804 - #18 ;
INFO  11:39:30,804 - #24 {
INFO  11:39:30,804 - #46 x
INFO  11:39:30,804 - #35 =
INFO  11:39:30,805 - #46 arg
INFO  11:39:30,805 - #18 ;
INFO  11:39:30,805 - #25 }
INFO  11:39:30,805 - #5 void
INFO  11:39:30,805 - #46 main
INFO  11:39:30,805 - #22 (
INFO  11:39:30,805 - #23 )
INFO  11:39:30,806 - #46 int
INFO  11:39:30,806 - #46 x
INFO  11:39:30,806 - #20 ,
INFO  11:39:30,807 - #46 i
INFO  11:39:30,807 - #18 ;
INFO  11:39:30,807 - #46 char
INFO  11:39:30,807 - #46 c
INFO  11:39:30,807 - #18 ;
INFO  11:39:30,807 - #46 int
INFO  11:39:30,807 - #46 arr
INFO  11:39:30,807 - #26 [
INFO  11:39:30,807 - #27 ]
INFO  11:39:30,807 - #18 ;
INFO  11:39:30,807 - #24 {
INFO  11:39:30,807 - #46 val
INFO  11:39:30,807 - #35 =
INFO  11:39:30,808 - #12 new
INFO  11:39:30,808 - #46 Table
INFO  11:39:30,808 - #22 (
INFO  11:39:30,808 - #45 2
INFO  11:39:30,808 - #23 )
INFO  11:39:30,808 - #18 ;
INFO  11:39:30,808 - #46 arr
INFO  11:39:30,808 - #35 =
INFO  11:39:30,809 - #12 new
INFO  11:39:30,809 - #46 int
INFO  11:39:30,809 - #26 [
INFO  11:39:30,809 - #45 3
INFO  11:39:30,809 - #27 ]
INFO  11:39:30,809 - #18 ;
INFO  11:39:30,809 - #46 i
INFO  11:39:30,809 - #35 =
INFO  11:39:30,809 - #45 0
INFO  11:39:30,809 - #18 ;
INFO  11:39:30,809 - #11 while
INFO  11:39:30,810 - #22 (
INFO  11:39:30,810 - #46 i
INFO  11:39:30,810 - #32 <
INFO  11:39:30,810 - #45 3
INFO  11:39:30,811 - #23 )
INFO  11:39:30,811 - #24 {
INFO  11:39:30,811 - #46 arr
INFO  11:39:30,812 - #26 [
INFO  11:39:30,812 - #46 i
INFO  11:39:30,812 - #27 ]
INFO  11:39:30,812 - #35 =
INFO  11:39:30,812 - #46 i
INFO  11:39:30,812 - #18 ;
INFO  11:39:30,812 - #46 i
INFO  11:39:30,812 - #38 ++
INFO  11:39:30,812 - #18 ;
INFO  11:39:30,812 - #25 }
INFO  11:39:30,813 - #46 arr
INFO  11:39:30,813 - #21 .
INFO  11:39:30,813 - #17 foreach
INFO  11:39:30,813 - #22 (
INFO  11:39:30,813 - #46 x
INFO  11:39:30,813 - #34 =>
INFO  11:39:30,813 - #3 print
INFO  11:39:30,813 - #22 (
INFO  11:39:30,813 - #46 x
INFO  11:39:30,813 - #23 )
INFO  11:39:30,813 - #18 ;
INFO  11:39:30,813 - #23 )
INFO  11:39:30,814 - #18 ;
INFO  11:39:30,814 - #46 val
INFO  11:39:30,814 - #21 .
INFO  11:39:30,814 - #46 pos
INFO  11:39:30,814 - #35 =
INFO  11:39:30,814 - #12 new
INFO  11:39:30,814 - #46 int
INFO  11:39:30,814 - #26 [
INFO  11:39:30,814 - #46 size
INFO  11:39:30,815 - #27 ]
INFO  11:39:30,815 - #18 ;
INFO  11:39:30,815 - #46 val
INFO  11:39:30,815 - #21 .
INFO  11:39:30,815 - #46 neg
INFO  11:39:30,815 - #35 =
INFO  11:39:30,815 - #12 new
INFO  11:39:30,815 - #46 int
INFO  11:39:30,815 - #26 [
INFO  11:39:30,815 - #46 size
INFO  11:39:30,815 - #27 ]
INFO  11:39:30,815 - #18 ;
INFO  11:39:30,816 - #13 read
INFO  11:39:30,816 - #22 (
INFO  11:39:30,816 - #46 x
INFO  11:39:30,816 - #23 )
INFO  11:39:30,816 - #18 ;
INFO  11:39:30,819 - #26 [
INFO  11:39:30,820 - #46 i
INFO  11:39:30,820 - #20 ,
INFO  11:39:30,820 - #46 x
INFO  11:39:30,823 - #27 ]
INFO  11:39:30,824 - #35 =
INFO  11:39:30,824 - #46 arr
INFO  11:39:30,824 - #18 ;
INFO  11:39:30,824 - #11 while
INFO  11:39:30,824 - #22 (
INFO  11:39:30,824 - #46 i
INFO  11:39:30,824 - #32 <
INFO  11:39:30,824 - #46 size
INFO  11:39:30,824 - #23 )
INFO  11:39:30,824 - #24 {
INFO  11:39:30,824 - #46 val
INFO  11:39:30,825 - #21 .
INFO  11:39:30,825 - #46 putp
INFO  11:39:30,825 - #22 (
INFO  11:39:30,825 - #45 0
INFO  11:39:30,825 - #20 ,
INFO  11:39:30,825 - #46 i
INFO  11:39:30,825 - #23 )
INFO  11:39:30,825 - #18 ;
INFO  11:39:30,826 - #46 val
INFO  11:39:30,826 - #21 .
INFO  11:39:30,826 - #46 putn
INFO  11:39:30,826 - #22 (
INFO  11:39:30,826 - #45 0
INFO  11:39:30,826 - #20 ,
INFO  11:39:30,826 - #46 i
INFO  11:39:30,827 - #23 )
INFO  11:39:30,827 - #18 ;
INFO  11:39:30,827 - #46 i
INFO  11:39:30,828 - #38 ++
INFO  11:39:30,828 - #18 ;
INFO  11:39:30,828 - #25 }
INFO  11:39:30,828 - #46 f
INFO  11:39:30,828 - #22 (
INFO  11:39:30,828 - #46 c
INFO  11:39:30,828 - #20 ,
INFO  11:39:30,828 - #46 x
INFO  11:39:30,828 - #20 ,
INFO  11:39:30,828 - #46 i
INFO  11:39:30,828 - #23 )
INFO  11:39:30,828 - #18 ;
INFO  11:39:30,828 - #13 read
INFO  11:39:30,828 - #22 (
INFO  11:39:30,828 - #46 rows
INFO  11:39:30,828 - #23 )
INFO  11:39:30,828 - #18 ;
INFO  11:39:30,828 - #46 x
INFO  11:39:30,829 - #35 =
INFO  11:39:30,829 - #46 rows
INFO  11:39:30,829 - #18 ;
INFO  11:39:30,829 - #11 while
INFO  11:39:30,829 - #22 (
INFO  11:39:30,829 - #50 true
INFO  11:39:30,829 - #23 )
