INFO  15:10:07,706 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  15:10:08,038 - #2 program
INFO  15:10:08,039 - #46 p
INFO  15:10:08,039 - #9 const
INFO  15:10:08,054 - #46 int
INFO  15:10:08,054 - #46 size
INFO  15:10:08,055 - #35 =
INFO  15:10:08,055 - #45 10
INFO  15:10:08,055 - #18 ;
INFO  15:10:08,055 - #7 class
INFO  15:10:08,056 - #46 Table
INFO  15:10:08,056 - #24 {
INFO  15:10:08,057 - #46 int
INFO  15:10:08,058 - #46 pos
INFO  15:10:08,058 - #26 [
INFO  15:10:08,058 - #27 ]
INFO  15:10:08,058 - #20 ,
INFO  15:10:08,058 - #46 neg
INFO  15:10:08,058 - #26 [
INFO  15:10:08,058 - #27 ]
INFO  15:10:08,058 - #20 ,
INFO  15:10:08,059 - #46 factor
INFO  15:10:08,059 - #18 ;
INFO  15:10:08,059 - #24 {
INFO  15:10:08,060 - #46 Table
INFO  15:10:08,061 - #22 (
INFO  15:10:08,061 - #46 int
INFO  15:10:08,061 - #46 factor
INFO  15:10:08,061 - #23 )
INFO  15:10:08,062 - #24 {
INFO  15:10:08,062 - #46 factor
INFO  15:10:08,062 - #35 =
INFO  15:10:08,063 - #46 factor
INFO  15:10:08,063 - #18 ;
INFO  15:10:08,063 - #25 }
INFO  15:10:08,063 - #5 void
INFO  15:10:08,064 - #46 putp
INFO  15:10:08,064 - #22 (
INFO  15:10:08,065 - #46 int
INFO  15:10:08,065 - #46 a
INFO  15:10:08,065 - #20 ,
INFO  15:10:08,065 - #46 int
INFO  15:10:08,065 - #46 idx
INFO  15:10:08,065 - #23 )
INFO  15:10:08,065 - #24 {
INFO  15:10:08,065 - #46 pos
INFO  15:10:08,065 - #26 [
INFO  15:10:08,066 - #46 idx
INFO  15:10:08,066 - #27 ]
INFO  15:10:08,066 - #35 =
INFO  15:10:08,066 - #46 a
INFO  15:10:08,066 - #18 ;
INFO  15:10:08,066 - #25 }
INFO  15:10:08,066 - #5 void
INFO  15:10:08,076 - #46 putn
INFO  15:10:08,076 - #22 (
INFO  15:10:08,076 - #46 int
INFO  15:10:08,076 - #46 a
INFO  15:10:08,076 - #20 ,
INFO  15:10:08,076 - #46 int
INFO  15:10:08,077 - #46 idx
INFO  15:10:08,077 - #23 )
INFO  15:10:08,077 - #24 {
INFO  15:10:08,077 - #46 neg
INFO  15:10:08,077 - #26 [
INFO  15:10:08,077 - #46 idx
INFO  15:10:08,077 - #27 ]
INFO  15:10:08,077 - #35 =
INFO  15:10:08,077 - #46 a
INFO  15:10:08,077 - #18 ;
INFO  15:10:08,077 - #25 }
INFO  15:10:08,077 - #46 int
INFO  15:10:08,078 - #46 getp
INFO  15:10:08,078 - #22 (
INFO  15:10:08,078 - #46 int
INFO  15:10:08,078 - #46 idx
INFO  15:10:08,078 - #23 )
INFO  15:10:08,078 - #24 {
INFO  15:10:08,078 - #4 return
INFO  15:10:08,078 - #46 pos
INFO  15:10:08,078 - #26 [
INFO  15:10:08,078 - #46 idx
INFO  15:10:08,078 - #27 ]
INFO  15:10:08,078 - #18 ;
INFO  15:10:08,078 - #25 }
INFO  15:10:08,078 - #46 int
INFO  15:10:08,079 - #46 getn
INFO  15:10:08,079 - #22 (
INFO  15:10:08,079 - #46 int
INFO  15:10:08,079 - #46 idx
INFO  15:10:08,079 - #23 )
INFO  15:10:08,079 - #24 {
INFO  15:10:08,079 - #4 return
INFO  15:10:08,079 - #46 neg
INFO  15:10:08,079 - #26 [
INFO  15:10:08,079 - #46 idx
INFO  15:10:08,079 - #27 ]
INFO  15:10:08,079 - #18 ;
INFO  15:10:08,079 - #25 }
INFO  15:10:08,079 - #25 }
INFO  15:10:08,079 - #25 }
INFO  15:10:08,080 - #46 Table
INFO  15:10:08,081 - #46 val
INFO  15:10:08,081 - #18 ;
INFO  15:10:08,081 - #46 Int
INFO  15:10:08,081 - #46 rows
INFO  15:10:08,081 - #20 ,
INFO  15:10:08,081 - #46 columns
INFO  15:10:08,081 - #18 ;
INFO  15:10:08,081 - #24 {
INFO  15:10:08,081 - #5 void
INFO  15:10:08,081 - #46 f
INFO  15:10:08,082 - #22 (
INFO  15:10:08,082 - #46 char
INFO  15:10:08,082 - #46 ch
INFO  15:10:08,082 - #20 ,
INFO  15:10:08,082 - #46 int
INFO  15:10:08,082 - #46 a
INFO  15:10:08,082 - #20 ,
INFO  15:10:08,082 - #46 int
INFO  15:10:08,082 - #46 arg
INFO  15:10:08,082 - #23 )
INFO  15:10:08,082 - #46 int
INFO  15:10:08,082 - #46 x
INFO  15:10:08,082 - #18 ;
INFO  15:10:08,082 - #24 {
INFO  15:10:08,082 - #46 x
INFO  15:10:08,082 - #35 =
INFO  15:10:08,083 - #46 arg
INFO  15:10:08,083 - #18 ;
INFO  15:10:08,083 - #25 }
INFO  15:10:08,083 - #5 void
INFO  15:10:08,083 - #46 main
INFO  15:10:08,083 - #22 (
INFO  15:10:08,083 - #23 )
INFO  15:10:08,084 - #46 int
INFO  15:10:08,084 - #46 x
INFO  15:10:08,084 - #20 ,
INFO  15:10:08,084 - #46 i
INFO  15:10:08,084 - #18 ;
INFO  15:10:08,084 - #46 char
INFO  15:10:08,084 - #46 c
INFO  15:10:08,084 - #18 ;
INFO  15:10:08,084 - #46 int
INFO  15:10:08,084 - #46 arr
INFO  15:10:08,084 - #26 [
INFO  15:10:08,084 - #27 ]
INFO  15:10:08,084 - #18 ;
INFO  15:10:08,084 - #24 {
INFO  15:10:08,084 - #46 val
INFO  15:10:08,084 - #35 =
INFO  15:10:08,084 - #12 new
INFO  15:10:08,084 - #46 Table
INFO  15:10:08,084 - #22 (
INFO  15:10:08,084 - #45 2
INFO  15:10:08,085 - #23 )
INFO  15:10:08,085 - #18 ;
INFO  15:10:08,085 - #46 arr
INFO  15:10:08,085 - #35 =
INFO  15:10:08,085 - #12 new
INFO  15:10:08,085 - #46 int
INFO  15:10:08,085 - #26 [
INFO  15:10:08,085 - #45 3
INFO  15:10:08,085 - #27 ]
INFO  15:10:08,085 - #18 ;
INFO  15:10:08,085 - #46 i
INFO  15:10:08,085 - #35 =
INFO  15:10:08,085 - #45 0
INFO  15:10:08,085 - #18 ;
INFO  15:10:08,085 - #11 while
INFO  15:10:08,085 - #22 (
INFO  15:10:08,086 - #46 i
INFO  15:10:08,086 - #32 <
INFO  15:10:08,086 - #45 3
INFO  15:10:08,093 - #23 )
INFO  15:10:08,093 - #24 {
INFO  15:10:08,093 - #46 arr
INFO  15:10:08,093 - #26 [
INFO  15:10:08,093 - #46 i
INFO  15:10:08,093 - #27 ]
INFO  15:10:08,093 - #35 =
INFO  15:10:08,093 - #46 i
INFO  15:10:08,094 - #18 ;
INFO  15:10:08,094 - #46 i
INFO  15:10:08,094 - #38 ++
INFO  15:10:08,094 - #18 ;
INFO  15:10:08,094 - #25 }
INFO  15:10:08,094 - #46 arr
INFO  15:10:08,094 - #21 .
INFO  15:10:08,094 - #17 foreach
INFO  15:10:08,094 - #22 (
INFO  15:10:08,094 - #46 x
INFO  15:10:08,094 - #34 =>
INFO  15:10:08,094 - #3 print
INFO  15:10:08,094 - #22 (
INFO  15:10:08,094 - #46 x
INFO  15:10:08,094 - #23 )
INFO  15:10:08,095 - #18 ;
INFO  15:10:08,095 - #23 )
INFO  15:10:08,095 - #18 ;
INFO  15:10:08,095 - #46 val
INFO  15:10:08,095 - #21 .
INFO  15:10:08,095 - #46 pos
INFO  15:10:08,095 - #35 =
INFO  15:10:08,095 - #12 new
INFO  15:10:08,095 - #46 int
INFO  15:10:08,095 - #26 [
INFO  15:10:08,095 - #46 size
INFO  15:10:08,095 - #27 ]
INFO  15:10:08,095 - #18 ;
INFO  15:10:08,095 - #46 val
INFO  15:10:08,095 - #21 .
INFO  15:10:08,095 - #46 neg
INFO  15:10:08,095 - #35 =
INFO  15:10:08,095 - #12 new
INFO  15:10:08,095 - #46 int
INFO  15:10:08,096 - #26 [
INFO  15:10:08,096 - #46 size
INFO  15:10:08,096 - #27 ]
INFO  15:10:08,096 - #18 ;
INFO  15:10:08,096 - #13 read
INFO  15:10:08,096 - #22 (
INFO  15:10:08,096 - #46 x
INFO  15:10:08,096 - #23 )
INFO  15:10:08,096 - #18 ;
INFO  15:10:08,096 - #26 [
INFO  15:10:08,096 - #46 i
INFO  15:10:08,096 - #20 ,
INFO  15:10:08,096 - #20 ,
ERROR 15:10:08,096 - 
Sintaksna greska na liniji 34
ERROR 15:10:08,096 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 34
