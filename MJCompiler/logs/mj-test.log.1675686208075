INFO  13:22:06,967 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:22:06,993 - #2 program
INFO  13:22:06,993 - #46 p
INFO  13:22:06,993 - #9 const
INFO  13:22:06,994 - #46 int
INFO  13:22:06,994 - #46 size
INFO  13:22:06,994 - #35 =
INFO  13:22:06,994 - #45 10
INFO  13:22:06,994 - #18 ;
INFO  13:22:06,994 - #7 class
INFO  13:22:06,995 - #46 Table
INFO  13:22:06,995 - #24 {
INFO  13:22:06,995 - #46 int
INFO  13:22:06,995 - #46 pos
INFO  13:22:06,995 - #26 [
INFO  13:22:06,995 - #27 ]
INFO  13:22:06,995 - #20 ,
INFO  13:22:06,995 - #46 neg
INFO  13:22:06,996 - #26 [
INFO  13:22:06,996 - #27 ]
INFO  13:22:06,996 - #20 ,
INFO  13:22:06,996 - #46 factor
INFO  13:22:06,996 - #18 ;
INFO  13:22:06,996 - #24 {
INFO  13:22:06,996 - #5 void
INFO  13:22:06,998 - #46 putp
INFO  13:22:06,998 - #22 (
INFO  13:22:06,998 - #46 int
INFO  13:22:06,998 - #46 a
INFO  13:22:06,998 - #20 ,
INFO  13:22:06,998 - #46 int
INFO  13:22:06,998 - #46 idx
INFO  13:22:06,998 - #23 )
INFO  13:22:06,998 - #24 {
INFO  13:22:06,998 - #46 pos
INFO  13:22:06,999 - #26 [
INFO  13:22:06,999 - #46 idx
INFO  13:22:06,999 - #27 ]
INFO  13:22:06,999 - #35 =
INFO  13:22:06,999 - #46 a
INFO  13:22:06,999 - #18 ;
INFO  13:22:07,000 - #25 }
INFO  13:22:07,000 - #5 void
INFO  13:22:07,000 - #46 putn
INFO  13:22:07,000 - #22 (
INFO  13:22:07,000 - #46 int
INFO  13:22:07,000 - #46 a
INFO  13:22:07,000 - #20 ,
INFO  13:22:07,000 - #46 int
INFO  13:22:07,000 - #46 idx
INFO  13:22:07,000 - #23 )
INFO  13:22:07,001 - #24 {
INFO  13:22:07,001 - #46 neg
INFO  13:22:07,001 - #26 [
INFO  13:22:07,001 - #46 idx
INFO  13:22:07,001 - #27 ]
INFO  13:22:07,001 - #35 =
INFO  13:22:07,001 - #46 a
INFO  13:22:07,001 - #18 ;
INFO  13:22:07,001 - #25 }
INFO  13:22:07,001 - #46 int
INFO  13:22:07,001 - #46 getp
INFO  13:22:07,001 - #22 (
INFO  13:22:07,001 - #46 int
INFO  13:22:07,001 - #46 idx
INFO  13:22:07,001 - #23 )
INFO  13:22:07,001 - #24 {
INFO  13:22:07,001 - #4 return
INFO  13:22:07,001 - #46 pos
INFO  13:22:07,002 - #26 [
INFO  13:22:07,002 - #46 idx
INFO  13:22:07,002 - #27 ]
INFO  13:22:07,002 - #18 ;
INFO  13:22:07,002 - #25 }
INFO  13:22:07,002 - #46 int
INFO  13:22:07,002 - #46 getn
INFO  13:22:07,002 - #22 (
INFO  13:22:07,002 - #46 int
INFO  13:22:07,002 - #46 idx
INFO  13:22:07,002 - #23 )
INFO  13:22:07,002 - #24 {
INFO  13:22:07,002 - #4 return
INFO  13:22:07,002 - #46 neg
INFO  13:22:07,002 - #26 [
INFO  13:22:07,002 - #46 idx
INFO  13:22:07,002 - #27 ]
INFO  13:22:07,002 - #18 ;
INFO  13:22:07,002 - #25 }
INFO  13:22:07,002 - #25 }
INFO  13:22:07,002 - #25 }
INFO  13:22:07,002 - #46 Table
INFO  13:22:07,003 - #46 val
INFO  13:22:07,003 - #18 ;
INFO  13:22:07,003 - #46 Int
INFO  13:22:07,003 - #46 rows
INFO  13:22:07,003 - #20 ,
INFO  13:22:07,003 - #46 columns
INFO  13:22:07,003 - #18 ;
INFO  13:22:07,003 - #24 {
INFO  13:22:07,003 - #5 void
INFO  13:22:07,003 - #46 f
INFO  13:22:07,003 - #22 (
INFO  13:22:07,003 - #46 char
INFO  13:22:07,003 - #46 ch
INFO  13:22:07,003 - #20 ,
INFO  13:22:07,003 - #46 int
INFO  13:22:07,003 - #46 a
INFO  13:22:07,003 - #20 ,
INFO  13:22:07,003 - #46 int
INFO  13:22:07,003 - #46 arg
INFO  13:22:07,003 - #23 )
INFO  13:22:07,003 - #46 int
INFO  13:22:07,004 - #46 x
INFO  13:22:07,004 - #18 ;
INFO  13:22:07,004 - #24 {
INFO  13:22:07,004 - #46 x
INFO  13:22:07,004 - #35 =
INFO  13:22:07,004 - #46 arg
INFO  13:22:07,004 - #18 ;
INFO  13:22:07,004 - #25 }
INFO  13:22:07,004 - #5 void
INFO  13:22:07,004 - #46 main
INFO  13:22:07,004 - #22 (
INFO  13:22:07,004 - #23 )
INFO  13:22:07,004 - #46 int
INFO  13:22:07,004 - #46 x
INFO  13:22:07,004 - #20 ,
INFO  13:22:07,004 - #46 i
INFO  13:22:07,004 - #18 ;
INFO  13:22:07,005 - #46 char
INFO  13:22:07,005 - #46 c
INFO  13:22:07,005 - #20 ,
INFO  13:22:07,005 - #46 int
INFO  13:22:07,005 - #46 arr
ERROR 13:22:07,005 - 
Sintaksna greska na liniji 24
INFO  13:22:07,005 - #26 [
INFO  13:22:07,005 - #27 ]
INFO  13:22:07,005 - #18 ;
INFO  13:22:07,005 - #24 {
INFO  13:22:07,005 - #46 val
INFO  13:22:07,005 - #35 =
ERROR 13:22:07,005 - Izvrsen oporavak greske u definiciji globalne promenljive do ; u liniji 8
ERROR 13:22:07,006 - 
Sintaksna greska na liniji 26
INFO  13:22:07,006 - #12 new
INFO  13:22:07,006 - #46 Table
INFO  13:22:07,006 - #22 (
INFO  13:22:07,006 - #45 2
INFO  13:22:07,006 - #23 )
INFO  13:22:07,006 - #18 ;
INFO  13:22:07,006 - #46 arr
INFO  13:22:07,006 - #35 =
INFO  13:22:07,006 - #12 new
INFO  13:22:07,006 - #46 int
INFO  13:22:07,006 - #26 [
INFO  13:22:07,006 - #45 3
INFO  13:22:07,006 - #27 ]
INFO  13:22:07,006 - #18 ;
INFO  13:22:07,006 - #46 i
INFO  13:22:07,006 - #35 =
INFO  13:22:07,006 - #45 0
INFO  13:22:07,006 - #18 ;
INFO  13:22:07,006 - #11 while
INFO  13:22:07,006 - #22 (
INFO  13:22:07,006 - #46 i
INFO  13:22:07,006 - #32 <
INFO  13:22:07,008 - #45 3
INFO  13:22:07,008 - #23 )
INFO  13:22:07,008 - #24 {
INFO  13:22:07,008 - #46 arr
INFO  13:22:07,008 - #26 [
INFO  13:22:07,008 - #46 i
INFO  13:22:07,008 - #27 ]
INFO  13:22:07,008 - #35 =
INFO  13:22:07,008 - #46 i
INFO  13:22:07,008 - #18 ;
INFO  13:22:07,008 - #46 i
INFO  13:22:07,008 - #38 ++
INFO  13:22:07,008 - #18 ;
INFO  13:22:07,008 - #25 }
INFO  13:22:07,008 - #46 arr
INFO  13:22:07,008 - #21 .
INFO  13:22:07,008 - #17 foreach
INFO  13:22:07,009 - #22 (
INFO  13:22:07,009 - #46 x
INFO  13:22:07,009 - #34 =>
INFO  13:22:07,009 - #3 print
INFO  13:22:07,009 - #22 (
INFO  13:22:07,009 - #46 x
INFO  13:22:07,009 - #23 )
INFO  13:22:07,009 - #18 ;
INFO  13:22:07,009 - #23 )
INFO  13:22:07,009 - #18 ;
INFO  13:22:07,009 - #46 val
INFO  13:22:07,009 - #21 .
INFO  13:22:07,009 - #46 pos
INFO  13:22:07,009 - #35 =
INFO  13:22:07,009 - #12 new
INFO  13:22:07,009 - #46 int
INFO  13:22:07,009 - #26 [
INFO  13:22:07,009 - #46 size
INFO  13:22:07,009 - #27 ]
INFO  13:22:07,009 - #18 ;
INFO  13:22:07,009 - #46 val
INFO  13:22:07,009 - #21 .
INFO  13:22:07,009 - #46 neg
INFO  13:22:07,010 - #35 =
INFO  13:22:07,010 - #12 new
INFO  13:22:07,010 - #46 int
INFO  13:22:07,010 - #26 [
INFO  13:22:07,010 - #46 size
INFO  13:22:07,010 - #27 ]
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #13 read
INFO  13:22:07,010 - #22 (
INFO  13:22:07,010 - #46 x
INFO  13:22:07,010 - #23 )
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #26 [
INFO  13:22:07,010 - #46 i
INFO  13:22:07,010 - #20 ,
INFO  13:22:07,010 - #20 ,
INFO  13:22:07,010 - #46 x
INFO  13:22:07,010 - #27 ]
INFO  13:22:07,010 - #35 =
INFO  13:22:07,010 - #46 arr
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #11 while
INFO  13:22:07,010 - #22 (
INFO  13:22:07,010 - #46 i
INFO  13:22:07,010 - #32 <
INFO  13:22:07,010 - #46 size
INFO  13:22:07,010 - #23 )
INFO  13:22:07,010 - #24 {
INFO  13:22:07,010 - #46 val
INFO  13:22:07,010 - #21 .
INFO  13:22:07,010 - #46 putp
INFO  13:22:07,010 - #22 (
INFO  13:22:07,010 - #45 0
INFO  13:22:07,010 - #20 ,
INFO  13:22:07,010 - #46 i
INFO  13:22:07,010 - #23 )
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #46 val
INFO  13:22:07,010 - #21 .
INFO  13:22:07,010 - #46 putn
INFO  13:22:07,010 - #22 (
INFO  13:22:07,010 - #45 0
INFO  13:22:07,010 - #20 ,
INFO  13:22:07,010 - #46 i
INFO  13:22:07,010 - #23 )
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #46 i
INFO  13:22:07,010 - #38 ++
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #25 }
INFO  13:22:07,010 - #46 f
INFO  13:22:07,010 - #22 (
INFO  13:22:07,010 - #46 c
INFO  13:22:07,010 - #20 ,
INFO  13:22:07,010 - #46 x
INFO  13:22:07,010 - #20 ,
INFO  13:22:07,010 - #46 i
INFO  13:22:07,010 - #23 )
INFO  13:22:07,010 - #18 ;
INFO  13:22:07,010 - #13 read
INFO  13:22:07,010 - #22 (
INFO  13:22:07,011 - #46 rows
INFO  13:22:07,011 - #23 )
INFO  13:22:07,011 - #18 ;
INFO  13:22:07,011 - #46 x
INFO  13:22:07,011 - #35 =
INFO  13:22:07,011 - #46 rows
INFO  13:22:07,011 - #18 ;
INFO  13:22:07,011 - #11 while
INFO  13:22:07,011 - #22 (
INFO  13:22:07,011 - #48 true
INFO  13:22:07,011 - #23 )
INFO  13:22:07,011 - #24 {
INFO  13:22:07,011 - #49 if
INFO  13:22:07,011 - #22 (
INFO  13:22:07,011 - #46 x
INFO  13:22:07,011 - #33 <=
INFO  13:22:07,011 - #45 0
INFO  13:22:07,011 - #23 )
INFO  13:22:07,011 - #6 break
INFO  13:22:07,011 - #18 ;
INFO  13:22:07,011 - #49 if
INFO  13:22:07,011 - #22 (
INFO  13:22:07,011 - #45 0
INFO  13:22:07,011 - #33 <=
INFO  13:22:07,011 - #46 x
INFO  13:22:07,011 - #36 &&
INFO  13:22:07,011 - #46 x
INFO  13:22:07,011 - #32 <
INFO  13:22:07,011 - #46 size
INFO  13:22:07,011 - #23 )
INFO  13:22:07,011 - #24 {
INFO  13:22:07,011 - #46 val
INFO  13:22:07,011 - #21 .
INFO  13:22:07,011 - #46 putp
INFO  13:22:07,012 - #22 (
INFO  13:22:07,012 - #46 val
INFO  13:22:07,012 - #21 .
INFO  13:22:07,012 - #46 getp
INFO  13:22:07,012 - #22 (
INFO  13:22:07,012 - #46 x
INFO  13:22:07,012 - #23 )
INFO  13:22:07,012 - #40 +
INFO  13:22:07,012 - #45 1
INFO  13:22:07,012 - #23 )
INFO  13:22:07,012 - #18 ;
INFO  13:22:07,012 - #25 }
INFO  13:22:07,012 - #50 else
INFO  13:22:07,012 - #49 if
INFO  13:22:07,012 - #22 (
INFO  13:22:07,012 - #41 -
INFO  13:22:07,012 - #46 size
INFO  13:22:07,012 - #32 <
INFO  13:22:07,012 - #46 x
INFO  13:22:07,012 - #36 &&
INFO  13:22:07,012 - #46 x
INFO  13:22:07,012 - #32 <
INFO  13:22:07,012 - #45 0
INFO  13:22:07,012 - #23 )
INFO  13:22:07,012 - #24 {
INFO  13:22:07,012 - #46 val
INFO  13:22:07,012 - #21 .
INFO  13:22:07,012 - #46 putn
INFO  13:22:07,012 - #22 (
INFO  13:22:07,012 - #46 val
INFO  13:22:07,012 - #21 .
INFO  13:22:07,012 - #46 getn
INFO  13:22:07,012 - #22 (
INFO  13:22:07,012 - #41 -
INFO  13:22:07,012 - #46 x
INFO  13:22:07,012 - #23 )
INFO  13:22:07,012 - #40 +
INFO  13:22:07,012 - #45 1
INFO  13:22:07,012 - #23 )
INFO  13:22:07,012 - #18 ;
INFO  13:22:07,012 - #25 }
INFO  13:22:07,012 - #13 read
INFO  13:22:07,013 - #22 (
INFO  13:22:07,013 - #46 x
INFO  13:22:07,013 - #23 )
INFO  13:22:07,013 - #18 ;
INFO  13:22:07,013 - #25 }
INFO  13:22:07,013 - #25 }
INFO  13:22:07,013 - #25 }
ERROR 13:22:07,013 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 63
