INFO  11:25:34,091 - Compiling source file: D:\Faks\7. semestar\PP1\Projekat\Pocetni projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:25:34,187 - #2 program
INFO  11:25:34,187 - #46 p
INFO  11:25:34,187 - #9 const
INFO  11:25:34,188 - #46 int
INFO  11:25:34,188 - #46 size
INFO  11:25:34,188 - #35 =
INFO  11:25:34,188 - #45 10
INFO  11:25:34,188 - #18 ;
INFO  11:25:34,188 - #7 class
INFO  11:25:34,190 - #46 Table
INFO  11:25:34,190 - #24 {
INFO  11:25:34,190 - #46 int
INFO  11:25:34,190 - #46 pos
INFO  11:25:34,190 - #26 [
INFO  11:25:34,190 - #27 ]
INFO  11:25:34,190 - #20 ,
INFO  11:25:34,191 - #46 neg
INFO  11:25:34,191 - #26 [
INFO  11:25:34,191 - #27 ]
INFO  11:25:34,191 - #20 ,
INFO  11:25:34,191 - #46 factor
INFO  11:25:34,191 - #18 ;
INFO  11:25:34,191 - #24 {
INFO  11:25:34,191 - #46 Table
INFO  11:25:34,191 - #22 (
INFO  11:25:34,191 - #46 int
INFO  11:25:34,192 - #46 factor
INFO  11:25:34,192 - #23 )
INFO  11:25:34,192 - #24 {
INFO  11:25:34,192 - #46 factor
INFO  11:25:34,193 - #35 =
INFO  11:25:34,193 - #46 factor
INFO  11:25:34,193 - #18 ;
INFO  11:25:34,193 - #25 }
INFO  11:25:34,194 - #5 void
INFO  11:25:34,194 - #46 putp
INFO  11:25:34,194 - #22 (
INFO  11:25:34,194 - #46 int
INFO  11:25:34,194 - #46 a
INFO  11:25:34,194 - #20 ,
INFO  11:25:34,195 - #46 int
INFO  11:25:34,195 - #46 idx
INFO  11:25:34,195 - #23 )
INFO  11:25:34,195 - #24 {
INFO  11:25:34,195 - #46 pos
INFO  11:25:34,195 - #26 [
INFO  11:25:34,195 - #46 idx
INFO  11:25:34,195 - #27 ]
INFO  11:25:34,195 - #35 =
INFO  11:25:34,195 - #46 a
INFO  11:25:34,196 - #18 ;
INFO  11:25:34,196 - #25 }
INFO  11:25:34,196 - #5 void
INFO  11:25:34,196 - #46 putn
INFO  11:25:34,196 - #22 (
INFO  11:25:34,196 - #46 int
INFO  11:25:34,197 - #46 a
INFO  11:25:34,197 - #20 ,
INFO  11:25:34,197 - #46 int
INFO  11:25:34,197 - #46 idx
INFO  11:25:34,197 - #23 )
INFO  11:25:34,197 - #24 {
INFO  11:25:34,197 - #46 neg
INFO  11:25:34,197 - #26 [
INFO  11:25:34,197 - #46 idx
INFO  11:25:34,197 - #27 ]
INFO  11:25:34,197 - #35 =
INFO  11:25:34,197 - #46 a
INFO  11:25:34,197 - #18 ;
INFO  11:25:34,198 - #25 }
INFO  11:25:34,198 - #46 int
INFO  11:25:34,198 - #46 getp
INFO  11:25:34,198 - #22 (
INFO  11:25:34,198 - #46 int
INFO  11:25:34,198 - #46 idx
INFO  11:25:34,198 - #23 )
INFO  11:25:34,198 - #24 {
INFO  11:25:34,198 - #4 return
INFO  11:25:34,198 - #46 pos
INFO  11:25:34,198 - #26 [
INFO  11:25:34,199 - #46 idx
INFO  11:25:34,199 - #27 ]
INFO  11:25:34,199 - #18 ;
INFO  11:25:34,199 - #25 }
INFO  11:25:34,199 - #46 int
INFO  11:25:34,200 - #46 getn
INFO  11:25:34,200 - #22 (
INFO  11:25:34,200 - #46 int
INFO  11:25:34,200 - #46 idx
INFO  11:25:34,200 - #23 )
INFO  11:25:34,200 - #24 {
INFO  11:25:34,200 - #4 return
INFO  11:25:34,200 - #46 neg
INFO  11:25:34,200 - #26 [
INFO  11:25:34,200 - #46 idx
INFO  11:25:34,200 - #27 ]
INFO  11:25:34,200 - #18 ;
INFO  11:25:34,200 - #25 }
INFO  11:25:34,200 - #25 }
INFO  11:25:34,200 - #25 }
INFO  11:25:34,200 - #46 Table
INFO  11:25:34,200 - #46 val
INFO  11:25:34,201 - #18 ;
INFO  11:25:34,201 - #46 Int
INFO  11:25:34,201 - #46 rows
INFO  11:25:34,201 - #20 ,
INFO  11:25:34,201 - #46 columns
INFO  11:25:34,201 - #18 ;
INFO  11:25:34,202 - #24 {
INFO  11:25:34,202 - #5 void
INFO  11:25:34,202 - #46 f
INFO  11:25:34,202 - #22 (
INFO  11:25:34,202 - #46 char
INFO  11:25:34,202 - #46 ch
INFO  11:25:34,202 - #20 ,
INFO  11:25:34,202 - #46 int
INFO  11:25:34,202 - #46 a
INFO  11:25:34,202 - #20 ,
INFO  11:25:34,202 - #46 int
INFO  11:25:34,202 - #46 arg
INFO  11:25:34,202 - #23 )
INFO  11:25:34,202 - #46 int
INFO  11:25:34,202 - #46 x
INFO  11:25:34,202 - #18 ;
INFO  11:25:34,202 - #24 {
INFO  11:25:34,203 - #46 x
INFO  11:25:34,203 - #35 =
INFO  11:25:34,203 - #46 arg
INFO  11:25:34,203 - #18 ;
INFO  11:25:34,203 - #25 }
INFO  11:25:34,203 - #5 void
INFO  11:25:34,203 - #46 main
INFO  11:25:34,203 - #22 (
INFO  11:25:34,203 - #23 )
INFO  11:25:34,204 - #46 int
INFO  11:25:34,204 - #46 x
INFO  11:25:34,204 - #20 ,
INFO  11:25:34,204 - #46 i
INFO  11:25:34,204 - #18 ;
INFO  11:25:34,204 - #46 char
INFO  11:25:34,204 - #46 c
INFO  11:25:34,204 - #18 ;
INFO  11:25:34,204 - #46 int
INFO  11:25:34,204 - #46 arr
INFO  11:25:34,205 - #26 [
INFO  11:25:34,205 - #27 ]
INFO  11:25:34,205 - #18 ;
INFO  11:25:34,205 - #24 {
INFO  11:25:34,205 - #46 val
INFO  11:25:34,205 - #35 =
INFO  11:25:34,205 - #12 new
INFO  11:25:34,205 - #46 Table
INFO  11:25:34,205 - #22 (
INFO  11:25:34,205 - #45 2
INFO  11:25:34,206 - #23 )
INFO  11:25:34,206 - #18 ;
INFO  11:25:34,206 - #46 arr
INFO  11:25:34,206 - #35 =
INFO  11:25:34,206 - #12 new
INFO  11:25:34,206 - #46 int
INFO  11:25:34,206 - #26 [
INFO  11:25:34,206 - #45 3
INFO  11:25:34,206 - #27 ]
INFO  11:25:34,206 - #18 ;
INFO  11:25:34,208 - #46 i
INFO  11:25:34,208 - #35 =
INFO  11:25:34,208 - #45 0
INFO  11:25:34,208 - #18 ;
INFO  11:25:34,208 - #11 while
INFO  11:25:34,208 - #22 (
INFO  11:25:34,208 - #46 i
INFO  11:25:34,208 - #32 <
INFO  11:25:34,208 - #45 3
INFO  11:25:34,209 - #23 )
INFO  11:25:34,210 - #24 {
INFO  11:25:34,210 - #46 arr
INFO  11:25:34,210 - #26 [
INFO  11:25:34,210 - #46 i
INFO  11:25:34,210 - #27 ]
INFO  11:25:34,210 - #35 =
INFO  11:25:34,210 - #46 i
INFO  11:25:34,210 - #18 ;
INFO  11:25:34,210 - #46 i
INFO  11:25:34,210 - #38 ++
INFO  11:25:34,210 - #18 ;
INFO  11:25:34,210 - #25 }
INFO  11:25:34,210 - #46 arr
INFO  11:25:34,210 - #21 .
INFO  11:25:34,210 - #17 foreach
INFO  11:25:34,211 - #22 (
INFO  11:25:34,211 - #46 x
INFO  11:25:34,211 - #34 =>
INFO  11:25:34,211 - #3 print
INFO  11:25:34,211 - #22 (
INFO  11:25:34,211 - #46 x
INFO  11:25:34,211 - #23 )
INFO  11:25:34,211 - #18 ;
INFO  11:25:34,211 - #23 )
INFO  11:25:34,211 - #18 ;
INFO  11:25:34,211 - #46 val
INFO  11:25:34,211 - #21 .
INFO  11:25:34,211 - #46 pos
INFO  11:25:34,211 - #35 =
INFO  11:25:34,211 - #12 new
INFO  11:25:34,211 - #46 int
INFO  11:25:34,212 - #26 [
INFO  11:25:34,212 - #46 size
INFO  11:25:34,212 - #27 ]
INFO  11:25:34,212 - #18 ;
INFO  11:25:34,212 - #46 val
INFO  11:25:34,212 - #21 .
INFO  11:25:34,212 - #46 neg
INFO  11:25:34,212 - #35 =
INFO  11:25:34,212 - #12 new
INFO  11:25:34,212 - #46 int
INFO  11:25:34,212 - #26 [
INFO  11:25:34,213 - #46 size
INFO  11:25:34,213 - #27 ]
INFO  11:25:34,213 - #18 ;
INFO  11:25:34,213 - #13 read
INFO  11:25:34,213 - #22 (
INFO  11:25:34,213 - #46 x
INFO  11:25:34,213 - #23 )
INFO  11:25:34,213 - #18 ;
INFO  11:25:34,213 - #26 [
INFO  11:25:34,213 - #46 i
INFO  11:25:34,213 - #20 ,
INFO  11:25:34,213 - #46 x
INFO  11:25:34,213 - #27 ]
INFO  11:25:34,213 - #35 =
INFO  11:25:34,213 - #46 arr
INFO  11:25:34,213 - #18 ;
INFO  11:25:34,213 - #11 while
INFO  11:25:34,213 - #22 (
INFO  11:25:34,213 - #46 i
INFO  11:25:34,213 - #32 <
INFO  11:25:34,213 - #46 size
INFO  11:25:34,213 - #23 )
INFO  11:25:34,214 - #24 {
INFO  11:25:34,214 - #46 val
INFO  11:25:34,214 - #21 .
INFO  11:25:34,214 - #46 putp
INFO  11:25:34,214 - #22 (
INFO  11:25:34,214 - #45 0
INFO  11:25:34,214 - #20 ,
INFO  11:25:34,214 - #46 i
INFO  11:25:34,214 - #23 )
INFO  11:25:34,214 - #18 ;
INFO  11:25:34,214 - #46 val
INFO  11:25:34,214 - #21 .
INFO  11:25:34,215 - #46 putn
INFO  11:25:34,215 - #22 (
INFO  11:25:34,215 - #45 0
INFO  11:25:34,215 - #20 ,
INFO  11:25:34,215 - #46 i
INFO  11:25:34,215 - #23 )
INFO  11:25:34,215 - #18 ;
INFO  11:25:34,215 - #46 i
INFO  11:25:34,215 - #38 ++
INFO  11:25:34,215 - #18 ;
INFO  11:25:34,215 - #25 }
INFO  11:25:34,215 - #46 f
INFO  11:25:34,216 - #22 (
INFO  11:25:34,216 - #46 c
INFO  11:25:34,216 - #20 ,
INFO  11:25:34,216 - #46 x
INFO  11:25:34,216 - #20 ,
INFO  11:25:34,216 - #46 i
INFO  11:25:34,216 - #23 )
INFO  11:25:34,216 - #18 ;
INFO  11:25:34,216 - #13 read
INFO  11:25:34,216 - #22 (
INFO  11:25:34,216 - #46 rows
INFO  11:25:34,216 - #23 )
INFO  11:25:34,216 - #18 ;
INFO  11:25:34,216 - #46 x
INFO  11:25:34,216 - #35 =
INFO  11:25:34,216 - #46 rows
INFO  11:25:34,216 - #18 ;
INFO  11:25:34,216 - #11 while
INFO  11:25:34,216 - #22 (
INFO  11:25:34,216 - #50 true
INFO  11:25:34,217 - #23 )
